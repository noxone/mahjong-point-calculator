{"version":3,"file":"mahjong-points.js","mappings":"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QAEA,IAAY,EAAZ,C,MARC,EAGD,IAAc,EAAd,EAFA,GAAa,C,CAuF0C,O,gBgC/InE,OAAW,GAAS,GnCPU,EAAc,UAAU,EAAY,GmCU9D,EAAE,GAAY,EAAY,E,ChCgEvB,CA4EoC,EA5ExB,EAAY,EAAW,EAAnC,E,0DsCjFP,MAAM,I,mC3BI6E,OAA3B,OAAe,E,sB2BPpB,MAAM,I,qC9B2BO,OAAhB,OAAK,EAAM,E,4BoD9BpD,mBACH,cAAsB,GAAV,c,uBtCSnB,OAPmD,S,s0BuCmB5C,QAAK,E,gBAIL,UAAS,GAAa,E,gBAQtB,UAAS,GAAmB,E,eA8DpC,O,KAAA,C,gDAiBsC,YAA0B,W,0BAjB5B,K,gBCjGR,W,eAgBJ,c,kCAuDG,c,2EAtC3B,aAA4C,QAA5C,aAAyE,SAAzE,e,yDACI,aAAmB,OAAe,EAAW,G,eASzB,c,mCAiB6C,aAAa,OAAY,IAAvD,W,4DApClB,YAAgC,W,qCA6BhB,W,gBCD+B,SAG5D,QAAiB,EACjB,OAAU,GAAc,S,MAHxB,OAKW,gBAN6C,EAM7C,I,oBA/Df,YACA,YAE2C,YACd,Y,kBCLJ,YAAgC,YACrC,W,eCIf,O,KAAA,C,0BAAgD,OAEW,OAER,gB,EAEK,OAAkB,KAAM,O,EAE9B,OAEyC,Q,KCkH3F,IDhHwF,Q,KC0HxF,IDxHsE,Q,KC0ItE,IDxIyE,Q,KCgJzE,ID9IiD,Q,KCbjD,IDemE,Q,KCPnE,IDSyE,Q,KCkJzE,IDhJsE,Q,KC0JtE,IDxJ+E,Q,KCoL/E,IDlLwF,Q,KCsNxF,IDpNqF,Q,KC8NrF,ID5NmE,Q,KC0MnE,IDxM+E,Q,KC0O/E,IDxOuD,Q,KCjBvD,IDmB4E,Q,KC6V5E,ID3V6D,Q,KCoW7D,I,uGArRc,uB,2CACY,qC,uBACpB,a,sCAHc,W,sDASpB,O,kBACC,Q,iBACgD,O,oBACG,U,mBACD,Q,sCALhC,W,yDAqBhB,U,mBACD,S,oBACC,S,sCAHU,W,0DAST,W,sBACC,Y,mBACH,Q,sCAHY,W,sDAzJd,O,iBACA,M,sCAFM,W,2DAQD,Q,uBACC,S,kBACL,O,sCAHW,W,uEA4JE,uB,4CACY,qC,wBACpB,a,sCAHQ,W,yDASd,O,mBA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","sources":["webpack://mahjong-points/webpack/universalModuleDefinition","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/ArrayBuffer.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/math.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Arrays.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Collections.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Sets.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Sequences.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Ranges.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Sequences.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractList.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractMap.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Collections.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Maps.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Standard.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/MutableCollections.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/SequenceBuilder.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines_13/IntrinsicsJs.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashSet.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/coroutines/CoroutineContextImpl.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/coroutines/intrinsics/Intrinsics.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/internal/progressionUtil.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/properties/Delegates.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/PrimitiveRanges.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/ProgressionIterators.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/Progressions.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Appendable.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Char.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/char.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/dynamic.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/StringNumberConversions.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/numberConversions.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Strings.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/stringsCode.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/string.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/builtins/Library.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/arrays.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/noPackageHacks.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Lazy.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Result.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Tuples.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/runtime/primitiveCompanionObjects.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/kotlinHacks.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableList.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/ArrayList.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashMap.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Preconditions.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalHashCodeMap.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/LinkedHashMap.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/LinkedHashSet.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/dom/ItemArrayLike.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/StringBuilderJs.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/src/generated/_WhitespaceChars.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/CharCode.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/src/generated/_DigitChars.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/regex.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/builtins/Char.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/builtins/Enum.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/BitMask.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/bitUtils.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/charSequence.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/numberConversion.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/unsigned/src/kotlin/UShort.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/collectionsHacks.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/coreRuntime.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/typeCheckUtils.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/hacks.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/long.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/longjs.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/numbers.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/rangeTo.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/runtime/reflectRuntime.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/src/generated/_ArraysJs.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines_13/CoroutineImpl.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/exceptions.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/jsOperators.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractCollection.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractSet.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/PrimitiveIterators.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/coroutines/Continuation.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/core/builtins/src/kotlin/Unit.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/EqualityComparator.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Strings.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/regexp.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalMap.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Iterables.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Sets.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/json.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlinx/dom/Mutations.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/api.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/attributes.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/delegating-map.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/finalize-consumer.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-attributes.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-enums.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-b.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-d.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-f.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-h.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-i.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-l.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-p.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-s.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/htmltag.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/jsMain/kotlin/dom-js.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-entities.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/jsMain/kotlin/generated/gen-event-attrs-js.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-attr-traits.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/Constants.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/html/Document.Ext.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/MahjongPointCalculator.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/game/Combination.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/game/GameModifiers.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/game/Hand.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/game/Tile.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/game/Wind.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/lang/Language.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/lang/StringKeys.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/lang/Translator.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/model/CalculatorModel.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/model/ErrorMessage.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/model/Figure.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/result/ClassicRulesResultComputer.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/result/Line.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/result/PlayerResult.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/components/AbstractComponent.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/components/HandComponent.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/visit.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/jsMain/kotlin/generated/gen-consumer-tags-js.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/html/MrAttributes.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/html/Bootstrap.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/html/Element.Ext.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/components/OptionsComponent.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/components/ResultComponent.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/controls/ResultTable.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/components/TileSelectionComponent.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/controls/ErrorOverlay.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/controls/MainPage.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/controls/TileImage.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/html/Injector.kt","webpack://mahjong-points/../../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tag-unions.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/js/JQuery.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/js/Popover.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/ui/model/UIModel.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/util/Boolean.kt","webpack://mahjong-points/../../../../src/main/kotlin/org/olafneumann/mahjong/points/util/IdGenerator.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/math.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/org.w3c/org.w3c.dom.kt","webpack://mahjong-points/../../../../compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Maps.kt","webpack://mahjong-points/webpack/bootstrap","webpack://mahjong-points/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mahjong-points\"] = factory();\n\telse\n\t\troot[\"mahjong-points\"] = factory();\n})(this, () => {\nreturn ",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"package org.olafneumann.mahjong.points\n\nobject Constants {\n    private const val BASE_TILE_LOW = 2\n    private const val BASE_TILE_HIGH = 8\n    val BASE_TILES = BASE_TILE_LOW..BASE_TILE_HIGH\n\n    const val MAX_NUMBER_OF_KANGS_PER_HAND = 4\n    const val MAX_NUMBER_OF_TILES_PER_TYPE = 4\n\n    const val FIGURES_IN_COMPLETE_HAND = 5\n    const val MIN_NUMBER_OF_TILES_FOR_HAND = 13\n    const val WINNING_NUMBER_OF_TILES_FOR_HAND = 14\n\n    const val NUMBER_OF_TILE_IN_PAIR = 2\n    const val NUMBER_OF_TILE_IN_CHOW = 3\n    const val NUMBER_OF_TILE_IN_PUNG = 3\n    const val NUMBER_OF_TILE_IN_KANG = 4\n\n    const val MAX_NUMBER_OF_TILES_IN_SET = 4\n    const val MAX_NUMBER_OF_TILES_IN_PAIR = 2\n    const val MAX_NUMBER_OF_TILES_IN_BONUS = 8\n}\n","package org.olafneumann.mahjong.points.ui.html\n\nimport org.w3c.dom.Document\nimport org.w3c.dom.HTMLElement\n\ninline fun <reified T : HTMLElement> Document.getElement(id: String) = getElementById(elementId = id)!! as T\n","package org.olafneumann.mahjong.points\n\nimport kotlinx.browser.document\nimport kotlinx.browser.window\nimport org.olafneumann.mahjong.points.ui.components.HandComponent\nimport org.olafneumann.mahjong.points.ui.components.OptionsComponent\nimport org.olafneumann.mahjong.points.ui.components.ResultComponent\nimport org.olafneumann.mahjong.points.ui.html.getElement\nimport org.olafneumann.mahjong.points.ui.components.TileSelectionComponent\nimport org.olafneumann.mahjong.points.ui.controls.MainPage\nimport org.olafneumann.mahjong.points.ui.js.asJQuery\nimport org.olafneumann.mahjong.points.ui.model.UIModel\nimport org.w3c.dom.HTMLDivElement\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.HTMLFormElement\nimport kotlin.js.json\n\nfun main() {\n    window.onload = { initMahjongPointCalculator() }\n}\n\n/* the caught exception is generic to really catch all exceptions */\n@Suppress(\"TooGenericExceptionCaught\")\nprivate fun initMahjongPointCalculator() {\n    try {\n        initMahjongPointCalculatorUnsafe()\n    } catch (exception: Exception) {\n        console.error(exception)\n        window.alert(\"Unable to initialize RegexGenerator: ${exception.message}\")\n    }\n}\n\nprivate fun initMahjongPointCalculatorUnsafe() {\n    MainPage.translate(document.getElement(\"mr_main\"))\n\n    val tilesDiv = document.getElement<HTMLDivElement>(\"mr_tiles\")\n    val selectedTilesDiv = document.getElement<HTMLDivElement>(\"mr_selected_tiles\")\n    val optionsDiv = document.getElement<HTMLDivElement>(\"mr_options\")\n    val resultDiv = document.getElement<HTMLDivElement>(\"mr_result\")\n\n    val model = UIModel()\n\n    TileSelectionComponent(parent = tilesDiv, model = model)\n    OptionsComponent(parent = optionsDiv, model = model)\n    HandComponent(parent = selectedTilesDiv, model = model)\n    ResultComponent(parent = resultDiv, model = model)\n\n    model.start()\n\n    window.setTimeout({\n        val loading = document.getElement<HTMLElement>(\"mr_loading\")\n        console.log(\"hide\")\n        loading.asJQuery()\n            .fadeOut(json(\"duration\" to 500, \"complete\" to { loading.asJQuery().remove() }))\n    }, 1)\n}\n\n","package org.olafneumann.mahjong.points.game\n\ndata class Combination(\n    val type: Type,\n    val tile: Tile,\n    val visibility: Visibility = Visibility.Closed,\n) {\n    fun getTiles(): List<Tile> =\n        when (type) {\n            Type.Unfinished0 -> listOf(tile)\n            Type.UnfinishedPlus1 -> listOf(tile, tile.next!!)\n            Type.Pair -> listOf(tile, tile)\n            Type.Pung -> listOf(tile, tile, tile)\n            Type.Kang -> listOf(tile, tile, tile, tile)\n            Type.Chow -> listOf(tile, tile.next!!, tile.next?.next!!)\n        }\n\n    fun replace(hand: Hand, type: Type = this.type, tile: Tile = this.tile, visibility: Visibility = this.visibility) =\n        hand.replace(this, copy(type = type, tile = tile, visibility = visibility))\n\n    enum class Type(\n        val finished: Boolean = true\n    ) {\n        Pair(),\n        Chow(),\n        Pung(),\n        Kang(),\n        Unfinished0(false) /*only one tile selected*/,\n        UnfinishedPlus1(false) /*this and the next tile selected*/,\n        ;\n    }\n\n    enum class Visibility {\n        Open, Closed;\n\n        companion object {\n            fun from(open: Boolean) = if (open) Open else Closed\n        }\n    }\n}\n","package org.olafneumann.mahjong.points.game\n\ndata class GameModifiers(\n    val prevailingWind: Wind,\n    val mahjongAtBeginning: Boolean = false,\n    val schlussziegelVonMauer: Boolean = false,\n    val schlussziegelEinzigMoeglicherZiegel: Boolean = false,\n    val schlussziegelKomplettiertPaar: Boolean = false,\n    val schlussziegelVonToterMauer: Boolean = false,\n    val mitDemLetztenZiegelDerMauerGewonnen: Boolean = false,\n    val schlussziegelIstAbgelegterZiegelNachAbbauDerMauer: Boolean = false,\n    val beraubungDesKang: Boolean = false,\n)\n","package org.olafneumann.mahjong.points.game\n\nimport org.olafneumann.mahjong.points.Constants\n\ndata class Hand(\n    val figure1: Combination? = null,\n    val figure2: Combination? = null,\n    val figure3: Combination? = null,\n    val figure4: Combination? = null,\n    val pair: Combination? = null,\n    val bonusTiles: Set<Tile> = emptySet(),\n) {\n    val fullFigures: List<Combination> = listOf(figure1, figure2, figure3, figure4).mapNotNull { it }\n    val allFigures: List<Combination> = listOf(figure1, figure2, figure3, figure4, pair).mapNotNull { it }\n\n    val allTilesOfFigures: List<Tile> = allFigures.flatMap { it.getTiles() }\n    val allTiles: List<Tile> = allTilesOfFigures + bonusTiles\n\n    val isMahjong: Boolean = allFigures.filter { it.type.finished }.size == Constants.FIGURES_IN_COMPLETE_HAND\n    fun containsPungWith(tile: Tile) =\n        allFigures\n            .filter { it.type == Combination.Type.Pung }\n            .map { it.tile }\n            .contains(tile)\n\n    fun replace(oldCombination: Combination, newCombination: Combination?): Hand =\n        copy(\n            figure1 = if (figure1 == oldCombination) newCombination else figure1,\n            figure2 = if (figure2 == oldCombination) newCombination else figure2,\n            figure3 = if (figure3 == oldCombination) newCombination else figure3,\n            figure4 = if (figure4 == oldCombination) newCombination else figure4,\n            pair = if (pair == oldCombination) newCombination else pair\n        )\n\n    companion object {\n        fun fromTiles(tiles: Collection<Tile>): Hand {\n            val bonusTiles = tiles.filter { it.isBonusTile }.toSet()\n            val tilesToHandle = (tiles - bonusTiles).toMutableList()\n            val numberOfKangs = tilesToHandle.size - Constants.WINNING_NUMBER_OF_TILES_FOR_HAND\n            val foundFigures = mutableListOf<Combination>()\n            val numberOfTiles = tilesToHandle.fold(mutableMapOf<Tile, Int>()) { map, tile ->\n                map[tile] = map.getOrPut(tile) { 0 }\n                map\n            }\n            val countToTiles = numberOfTiles.entries.fold(mutableMapOf<Int, MutableList<Tile>>()) { map, entry ->\n                map.getOrPut(entry.value) { mutableListOf() }.add(entry.key)\n                map\n            }.toMap()\n            if (countToTiles[Constants.MAX_NUMBER_OF_KANGS_PER_HAND]?.size == numberOfKangs) {\n                val kangTiles = countToTiles[Constants.MAX_NUMBER_OF_KANGS_PER_HAND]!!\n                foundFigures.addAll(kangTiles.map { tile -> Combination(Combination.Type.Kang, tile) })\n                foundFigures.removeAll { kangTiles.contains(it.tile) }\n            }\n            return Hand(bonusTiles = bonusTiles)\n        }\n    }\n}\n","package org.olafneumann.mahjong.points.game\n\nimport org.olafneumann.mahjong.points.Constants.BASE_TILES\nimport org.olafneumann.mahjong.points.Constants.MAX_NUMBER_OF_TILES_PER_TYPE\nimport org.olafneumann.mahjong.points.game.Wind.East\nimport org.olafneumann.mahjong.points.game.Wind.North\nimport org.olafneumann.mahjong.points.game.Wind.South\nimport org.olafneumann.mahjong.points.game.Wind.West\n\nenum class Tile(\n    val color: Color?,\n    val number: Int?,\n    val wind: Wind? = null,\n    val character: Char? = number?.toString()?.get(0)\n) {\n    Bamboo1(color = Color.Bamboo, number = 1),\n    Bamboo2(color = Color.Bamboo, number = 2),\n    Bamboo3(color = Color.Bamboo, number = 3),\n    Bamboo4(color = Color.Bamboo, number = 4),\n    Bamboo5(color = Color.Bamboo, number = 5),\n    Bamboo6(color = Color.Bamboo, number = 6),\n    Bamboo7(color = Color.Bamboo, number = 7),\n    Bamboo8(color = Color.Bamboo, number = 8),\n    Bamboo9(color = Color.Bamboo, number = 9),\n    Circles1(color = Color.Circle, number = 1),\n    Circles2(color = Color.Circle, number = 2),\n    Circles3(color = Color.Circle, number = 3),\n    Circles4(color = Color.Circle, number = 4),\n    Circles5(color = Color.Circle, number = 5),\n    Circles6(color = Color.Circle, number = 6),\n    Circles7(color = Color.Circle, number = 7),\n    Circles8(color = Color.Circle, number = 8),\n    Circles9(color = Color.Circle, number = 9),\n    Character1(color = Color.Character, number = 1),\n    Character2(color = Color.Character, number = 2),\n    Character3(color = Color.Character, number = 3),\n    Character4(color = Color.Character, number = 4),\n    Character5(color = Color.Character, number = 5),\n    Character6(color = Color.Character, number = 6),\n    Character7(color = Color.Character, number = 7),\n    Character8(color = Color.Character, number = 8),\n    Character9(color = Color.Character, number = 9),\n    WindEast(color = null, number = null, wind = East, character = 'E'),\n    WindSouth(color = null, number = null, wind = South, character = 'S'),\n    WindWest(color = null, number = null, wind = West, character = 'W'),\n    WindNorth(color = null, number = null, wind = North, character = 'N'),\n    DragonWhite(color = null, number = null),\n    DragonGreen(color = null, number = null),\n    DragonRed(color = null, number = null),\n    Flower1(color = null, number = 1),\n    Flower2(color = null, number = 2),\n    Flower3(color = null, number = 3),\n    Flower4(color = null, number = 4),\n    Season1(color = null, number = 1),\n    Season2(color = null, number = 2),\n    Season3(color = null, number = 3),\n    Season4(color = null, number = 4);\n\n    val isBaseTile: Boolean =\n        color != null && number in BASE_TILES\n    val isImage: Boolean = color == null\n\n    val next: Tile? by lazy { values().find { it.color == color && it.number == (number?.plus(1)) } }\n    val previous: Tile? by lazy { values().find { it.color == color && it.number == (number?.minus(1)) } }\n\n    val isWind: Boolean get() = this in winds\n    val isDragon: Boolean get() = this in dragons\n    val isFlower: Boolean get() = this in flowers\n    val isSeason: Boolean get() = this in seasons\n    val isTrump: Boolean get() = isWind || isDragon\n    val isBonusTile: Boolean get() = isFlower ||isSeason\n    val numberOfTilesInSet: Int get() = if (isBonusTile) 1 else MAX_NUMBER_OF_TILES_PER_TYPE\n\n    val filename = \"${name}.svg\".lowercase()\n\n    companion object {\n        val flowers: Collection<Tile> = setOf(Flower1, Flower2, Flower3, Flower4)\n        val seasons: Collection<Tile> = setOf(Season1, Season2, Season3, Season4)\n        val dragons: Collection<Tile> = setOf(DragonGreen, DragonRed, DragonWhite)\n        val winds: Collection<Tile> = setOf(WindEast, WindSouth, WindWest, WindNorth)\n        val bamboos: Collection<Tile> = allOfColor(Color.Bamboo)\n        val characters: Collection<Tile> = allOfColor(Color.Character)\n        val circles: Collection<Tile> = allOfColor(Color.Circle)\n\n        private fun allOfColor(color: Color) = values().filter { it.color == color }\n    }\n}\n","package org.olafneumann.mahjong.points.game\n\nenum class Wind {\n    East, North, West, South;\n\n    val next: Wind by lazy {\n        when (this) {\n            East -> North\n            North -> West\n            West -> South\n            South -> East\n        }\n    }\n}\n","package org.olafneumann.mahjong.points.lang\n\nimport kotlinx.browser.window\n\nclass Language(\n    private val translations: Map<String, String>\n) {\n\n    private fun String.emptyToNull() = trim().ifBlank { null }\n    private fun getTranslationFor(string: String): String? = translations[string]?.emptyToNull()\n\n    fun translate(string: String): String {\n        getTranslationFor(string)?.let { return it }\n\n        console.warn(\"Untranslated text:\", string)\n        return string\n    }\n\n    companion object {\n        private const val DEFAULT_LANGUAGE = \"en\"\n        private fun get(languageKey: String): Language? =\n            when (languageKey) {\n                DEFAULT_LANGUAGE -> Language(\n                    mapOf(\n                        \"Mahjong Points Calculator\" to \"Mahjong Points Calculator\",\n                        \"Compute\" to \"Compute\",\n                        \"Options\" to \"Options\",\n                        \"Close\" to \"Close\",\n                        \"Undo\" to \"Undo\",\n                        \"Next Player\" to \"Next Player\",\n                        \"Tiles\" to \"Tiles\",\n                        \"West\" to \"West\",\n                        \"East\" to \"East\",\n                        \"North\" to \"North\",\n                        \"South\" to \"South\",\n                        \"Hand\" to \"Hand\",\n                        \"Open\" to \"Exposed\",\n                        \"Closed\" to \"Concealed\",\n                        \"Figure1\" to \"Set 1\",\n                        \"Figure2\" to \"Set 2\",\n                        \"Figure3\" to \"Set 3\",\n                        \"Figure4\" to \"Set 4\",\n                        \"Pair\" to \"Pair\",\n                        \"Bonus\" to \"Bonus\",\n                        \"Reset\" to \"Reset\",\n                        \"Result\" to \"Result\",\n                        \"Prevailing Wind\" to \"Prevailing Wind\",\n                        \"Seat Wind\" to \"Seat Wind\",\n                        \"Point Calculation\" to \"Point Calculation\",\n                        \"Points\" to \"Points\",\n                        \"Sum Points\" to \"Sum Points\",\n                        \"Doublings\" to \"Doublings\",\n                        \"Sum Doublings\" to \"Sum Doublings\",\n                        \"Final Result\" to \"Final Result\",\n                        \"Schlussziegel von der Mauer\" to \"Winning tile drawn from wall\",\n                        \"Schlussziegel ist einzig möglicher Ziegel\" to \"Winning tile is only possible tile\",\n                        \"Schlussziegel komplettiert Paar\" to \"Winning tile completes pair\",\n                        \"Schlussziegel von der toten Mauer\" to \"Winning tile is replacement tile\",\n                        \"mit dem letzten Ziegel der Mauer gewonnen\" to \"Won with the last tile from the wall\",\n                        \"Schlussziegel ist abgelegter Ziegel nach Abbau der Mauer\" to \"Winning tile is last discard\",\n                        \"Beraubung des Kang\" to \"Robbing the Kang\",\n                        \"Mahjong-Ruf zu Beginn\" to \"Mahjong call at the beginning\",\n                        \"Compute points of current hand\" to \"Compute points of current hand\",\n                        \"Do you really want to reset your input?\" to \"Do you really want to reset your input?\",\n                        \"Reset current hand\" to \"Reset current hand\",\n                        StringKeys.KEY_BONUS_TILES to \"Bonus tiles\",\n                        StringKeys.KEY_CHOW_OPEN to \"Chow (open)\",\n                        StringKeys.KEY_CHOW_CLOSED to \"Chow (closed)\",\n                        StringKeys.PUNG_BASETILE_OPEN to \"Pung of minor tiles (exposed)\",\n                        StringKeys.PUNG_BASETILE_CLOSED to \"Pung of minor tiles (concealed)\",\n                        StringKeys.PUNG_MAINTILE_OPEN to \"Pung of major tiles (exposed)\",\n                        StringKeys.PUNG_MAINTILE_CLOSED to \"Pung of major tiles (concealed)\",\n                        StringKeys.KANG_BASETILE_OPEN to \"Kang of minor tiles (exposed)\",\n                        StringKeys.KANG_BASETILE_CLOSED to \"Kang of minor tiles (concealed)\",\n                        StringKeys.KANG_MAINTILE_OPEN to \"Kang of major tiles (exposed)\",\n                        StringKeys.KANG_MAINTILE_CLOSED to \"Kang of major tiles (concealed)\",\n                        StringKeys.PAIR_OF_DRAGONS to \"Pair of dragons\",\n                        StringKeys.MAHJONG to \"Mah-Jong!\",\n                        StringKeys.WINNING_TILE_FROM_WALL to \"Winning tile from the wall\",\n                        StringKeys.WINNING_TILE_ONLY_POSSIBLE_TILE to \"Winning tile is only possible tile\",\n                        StringKeys.WINNING_TILE_COMPLETES_PAIR_OF_MINOR_TILES to \"Winning tile completes pair of minor tiles\",\n                        StringKeys.WINNING_TILE_COMPLETES_PAIR_OF_MAJOR_TILES to \"Winning tile completes pair of major tiles\",\n                        StringKeys.PAIR_WIND_SEAT to \"Pair of seat wind\",\n                        StringKeys.ALL_FLOWERS to \"All flower tiles\",\n                        StringKeys.ALL_SEASONS to \"All season tiles\",\n                        StringKeys.PUNG_DRAGONS to \"Pung of dragons\",\n                        StringKeys.KANG_DRAGONS to \"Kang of dragons\",\n                        StringKeys.PUNG_PREVAILING_WIND to \"Pung of prevailing wind\",\n                        StringKeys.KANG_PREVAILING_WIND to \"Kang of prevailing wind\",\n                        StringKeys.THREE_CLOSED_PUNGS to \"\\\"Three closed Pungs\\\"\",\n                        StringKeys.SMALL_THREE_DRAGONS to \"\\\"Small three dragons\\\"\",\n                        StringKeys.BIG_THREE_DRAGONS to \"\\\"Big three dragons\\\"\",\n                        StringKeys.SMALL_THREE_FRIENDS to \"\\\"Small three friends\\\"\",\n                        StringKeys.BIG_FOUR_FRIENDS to \"Big four friends\",\n                        StringKeys.NO_CHOW to \"No Chow\",\n                        StringKeys.ALL_FIGURES_CLOSED to \"All sets concealed\",\n                        StringKeys.ALL_TILES_OF_ONE_COLOR_AND_PICTURES to \"All tiles of one color and pictures\",\n                        StringKeys.ALL_TILES_ONE_COLOR to \"All tiles of one color\",\n                        StringKeys.MAHJONG_AT_BEGINNING to \"Mahjong at the beginning\",\n                        StringKeys.ROBBING_THE_KANG to \"Robbing the Kang\",\n                        StringKeys.WINNING_TILE_IS_DISCARD_AFTER_END_OF_WALL to \"Winning tile is discarded tile after end of wall\",\n                        StringKeys.ONLY_MAINTILES to \"Only major tiles\",\n                        StringKeys.ONLY_IMAGETILES to \"Only image tiles\",\n                        StringKeys.WINNING_TILE_FROM_DEAD_WALL to \"Winning tile from dead end of wall\",\n                        StringKeys.WINNING_TILE_IS_LAST_TILE_FROM_WALL to \"Winning tile is last tile from wall\",\n\n                        StringKeys.ERR_NO_TILES_LEFT_FOR_PAIR to \"Not enough tiles left for a pair.\",\n                        StringKeys.ERR_NO_TILES_LEFT_FOR_CHOW to \"Not enough tiles left for a Chow.\",\n                        StringKeys.ERR_TILES_DOES_NOT_FIT_TO_CHOW_OR_PONG to \"Tile cannot be used for Pong or Chow in the selected set.\",\n                        StringKeys.ERR_TILE_DOES_NOT_FIT_TO_SET to \"Tile does not fit to selected set.\",\n                        StringKeys.ERR_NO_TILE_LEFT_FOR_KANG to \"No tile left for Kang.\",\n                        StringKeys.ERR_TILE_INVALID_FOR_KANG to \"Invalid tile for Kang.\",\n\n                        )\n                )\n\n                \"de\" -> Language(\n                    mapOf(\n                        \"Mahjong Points Calculator\" to \"Mahjong Punkte Rechner\",\n                        \"Compute\" to \"Berechnen\",\n                        \"Options\" to \"Optionen\",\n                        \"Close\" to \"Schließen\",\n                        \"Undo\" to \"Rückgängig\",\n                        \"Next Player\" to \"Nächster Spieler\",\n                        \"Tiles\" to \"Spielsteine\",\n                        \"West\" to \"Westen\",\n                        \"East\" to \"Osten\",\n                        \"North\" to \"Norden\",\n                        \"South\" to \"Süden\",\n                        \"Hand\" to \"Blatt\",\n                        \"Open\" to \"Offen\",\n                        \"Closed\" to \"Verdeckt\",\n                        \"Figure1\" to \"Figur 1\",\n                        \"Figure2\" to \"Figur 2\",\n                        \"Figure3\" to \"Figur 3\",\n                        \"Figure4\" to \"Figur 4\",\n                        \"Pair\" to \"Paar\",\n                        \"Bonus\" to \"Bonus\",\n                        \"Reset\" to \"Zurücksetzen\",\n                        \"Result\" to \"Ergebnis\",\n                        \"Prevailing Wind\" to \"Rundenwind\",\n                        \"Seat Wind\" to \"Platzwind\",\n                        \"Point Calculation\" to \"Punkteberechnung\",\n                        \"Points\" to \"Punkte\",\n                        \"Sum Points\" to \"Summe Punkte\",\n                        \"Doublings\" to \"Verdoppelungen\",\n                        \"Sum Doublings\" to \"Summe Verdoppelungen\",\n                        \"Final Result\" to \"Endergebnis\",\n                        \"Schlussziegel von der Mauer\" to \"Schlussziegel von der Mauer\",\n                        \"Schlussziegel ist einzig möglicher Ziegel\" to \"Schlussziegel ist einzig möglicher Ziegel\",\n                        \"Schlussziegel komplettiert Paar\" to \"Schlussziegel komplettiert Paar\",\n                        \"Schlussziegel von der toten Mauer\" to \"Schlussziegel von der toten Mauer\",\n                        \"mit dem letzten Ziegel der Mauer gewonnen\" to \"mit dem letzten Ziegel der Mauer gewonnen\",\n                        \"Schlussziegel ist abgelegter Ziegel nach Abbau der Mauer\" to \"Schlussziegel ist abgelegter Ziegel nach Abbau der Mauer\",\n                        \"Beraubung des Kang\" to \"Beraubung des Kang\",\n                        \"Mahjong-Ruf zu Beginn\" to \"Mahjong-Ruf zu Beginn\",\n                        \"Compute points of current hand\" to \"Punkte des aktuellen Blatts berechnen\",\n                        \"Do you really want to reset your input?\" to \"Wollen Sie wirklich die gesamte Eingabe zurücksetzen?\",\n                        \"Reset current hand\" to \"Blatt zurücksetzen\",\n                        StringKeys.KEY_BONUS_TILES to \"Bonusziegel\",\n                        StringKeys.KEY_CHOW_OPEN to \"Chi (offen)\",\n                        StringKeys.KEY_CHOW_CLOSED to \"Chi (geschlossen)\",\n                        StringKeys.PUNG_BASETILE_OPEN to \"Pong aus Basisziegeln (offen)\",\n                        StringKeys.PUNG_BASETILE_CLOSED to \"Pong aus Basisziegeln (geschlossen)\",\n                        StringKeys.PUNG_MAINTILE_OPEN to \"Pong aus Hauptziegeln (offen)\",\n                        StringKeys.PUNG_MAINTILE_CLOSED to \"Pong aus Hauptziegeln (geschlossen)\",\n                        StringKeys.KANG_BASETILE_OPEN to \"Kang aus Basisziegeln (offen)\",\n                        StringKeys.KANG_BASETILE_CLOSED to \"Kang aus Basisziegeln (geschlossen)\",\n                        StringKeys.KANG_MAINTILE_OPEN to \"Kang aus Hauptziegeln (offen)\",\n                        StringKeys.KANG_MAINTILE_CLOSED to \"Kang aus Hauptziegeln (geschlossen)\",\n                        StringKeys.PAIR_OF_DRAGONS to \"Paar von Drachen\",\n                        StringKeys.MAHJONG to \"Mahjong!\",\n                        StringKeys.WINNING_TILE_FROM_WALL to \"Schlussziegel von der Mauer\",\n                        StringKeys.WINNING_TILE_ONLY_POSSIBLE_TILE to \"Schlussziegel ist einzig möglicher Ziegel\",\n                        StringKeys.WINNING_TILE_COMPLETES_PAIR_OF_MINOR_TILES to \"Schlussziegel komplettiert Paar aus Grundziegeln\",\n                        StringKeys.WINNING_TILE_COMPLETES_PAIR_OF_MAJOR_TILES to \"Schlussziegel komplettiert Paar aus Hauptziegeln\",\n                        StringKeys.PAIR_WIND_SEAT to \"Paar des Platzwindes\",\n                        StringKeys.ALL_FLOWERS to \"Alle Blumenziegel\",\n                        StringKeys.ALL_SEASONS to \"Alle Jahreszeigenziegel\",\n                        StringKeys.PUNG_DRAGONS to \"Pong aus Drachen\",\n                        StringKeys.KANG_DRAGONS to \"Kang aus Drachen\",\n                        StringKeys.PUNG_PREVAILING_WIND to \"Pong des Rundenwindes\",\n                        StringKeys.KANG_PREVAILING_WIND to \"Kang des Rundenwindes\",\n                        StringKeys.THREE_CLOSED_PUNGS to \"Drei geschlossene Pongs\",\n                        StringKeys.SMALL_THREE_DRAGONS to \"„Kleine drei Drachen“\",\n                        StringKeys.BIG_THREE_DRAGONS to \"„Große drei Drachen“\",\n                        StringKeys.SMALL_THREE_FRIENDS to \"„Kleine drei Freunde“\",\n                        StringKeys.BIG_FOUR_FRIENDS to \"„Große vier Freunde“\",\n                        StringKeys.NO_CHOW to \"Kein Chi\",\n                        StringKeys.ALL_FIGURES_CLOSED to \"Alle Figuren geschlossen\",\n                        StringKeys.ALL_TILES_OF_ONE_COLOR_AND_PICTURES to \"Nur Ziegel einer Farbe oder mit Bildern\",\n                        StringKeys.ALL_TILES_ONE_COLOR to \"Nur Ziegel einer Farbe\",\n                        StringKeys.MAHJONG_AT_BEGINNING to \"Mahjong-Ruf zu Beginn\",\n                        StringKeys.ROBBING_THE_KANG to \"Beraubung des Kang\",\n                        StringKeys.WINNING_TILE_IS_DISCARD_AFTER_END_OF_WALL to \"Schlussziegel ist abgelegter Ziegel nach Abbau der Mauer\",\n                        StringKeys.ONLY_MAINTILES to \"Nur Hauptziegel\",\n                        StringKeys.ONLY_IMAGETILES to \"Nur Trumpfziegel\",\n                        StringKeys.WINNING_TILE_FROM_DEAD_WALL to \"Schlussziegel von der toten Mauer\",\n                        StringKeys.WINNING_TILE_IS_LAST_TILE_FROM_WALL to \"Schlussziegel ist letzter Ziegel der Mauer\",\n\n                        StringKeys.ERR_NO_TILES_LEFT_FOR_PAIR to \"Nicht genug Ziegel für Paar übrig.\",\n                        StringKeys.ERR_NO_TILES_LEFT_FOR_CHOW to \"Nicht genug Ziegel für Pong übrig.\",\n                        StringKeys.ERR_TILES_DOES_NOT_FIT_TO_CHOW_OR_PONG to \"Ziegel kann nicht für Chi oder Pong in der markierten Figur genutzt werden.\",\n                        StringKeys.ERR_TILE_DOES_NOT_FIT_TO_SET to \"Ziegel passt nicht zur markierten Figur.\",\n                        StringKeys.ERR_NO_TILE_LEFT_FOR_KANG to \"Nicht genug Ziegel für Kang.\",\n                        StringKeys.ERR_TILE_INVALID_FOR_KANG to \"Ungültiger Ziegel für Kang.\",\n\n                        )\n                )\n\n                else -> null\n            }\n\n        private val languagePattern = Regex(\"^([a-z]{2})\", setOf(RegexOption.IGNORE_CASE))\n\n        private fun getBrowserLanguage(): Language =\n            window.navigator.languages\n                .asSequence()\n                .mapNotNull { languagePattern.find(it) }\n                .map { it.groupValues[1].lowercase() }\n                .map { get(it) }\n                .firstOrNull()\n                ?: get(DEFAULT_LANGUAGE)!!\n\n        val current = getBrowserLanguage()\n    }\n}","package org.olafneumann.mahjong.points.lang\n\nobject StringKeys {\n    const val KEY_BONUS_TILES = \"Bonusziegel\"\n    const val KEY_CHOW_OPEN = \"Chi offen\"\n    const val KEY_CHOW_CLOSED = \"Chi verdeckt\"\n    const val PUNG_BASETILE_OPEN = \"Pung.Minor.Open\"\n    const val PUNG_BASETILE_CLOSED = \"Pung.Minor.Closed\"\n    const val PUNG_MAINTILE_OPEN = \"Pung.Major.Open\"\n    const val PUNG_MAINTILE_CLOSED = \"Pung.Major.Closed\"\n    const val KANG_BASETILE_OPEN = \"Kang.Minor.Open\"\n    const val KANG_BASETILE_CLOSED = \"Kang.Minor.Closed\"\n    const val KANG_MAINTILE_OPEN = \"Kang.Major.Open\"\n    const val KANG_MAINTILE_CLOSED = \"Kang.Major.Closed\"\n    const val PAIR_OF_DRAGONS = \"Pair.Dragon\"\n    const val MAHJONG = \"Mahjong\"\n    const val WINNING_TILE_FROM_WALL = \"Schlussziegel.von.Mauer\"\n    const val WINNING_TILE_ONLY_POSSIBLE_TILE = \"Schlussziegel.einzig.Moeglich\"\n    const val WINNING_TILE_COMPLETES_PAIR_OF_MINOR_TILES = \"Schlussziegel.komplettiert.Grundziegel\"\n    const val WINNING_TILE_COMPLETES_PAIR_OF_MAJOR_TILES = \"Schlussziegel.komplettiert.Hauptziegel\"\n    const val PAIR_WIND_SEAT = \"Pair.Wind.Seat\"\n    const val ALL_FLOWERS = \"All.Flowers\"\n    const val ALL_SEASONS = \"All.Seasons\"\n    const val PUNG_DRAGONS = \"Pung.Dragons\"\n    const val KANG_DRAGONS = \"Kang.Dragons\"\n    const val PUNG_PREVAILING_WIND = \"Pung.Prevailing.Wind\"\n    const val KANG_PREVAILING_WIND = \"Kang.Prevailing.Wind\"\n    const val THREE_CLOSED_PUNGS = \"3.Closed.Pungs\"\n    const val SMALL_THREE_DRAGONS = \"Small.3.Dragons\"\n    const val BIG_THREE_DRAGONS = \"Big.3.Dragons\"\n    const val SMALL_THREE_FRIENDS = \"Small.3.Friends\"\n    const val BIG_FOUR_FRIENDS = \"Big.4.Friends\"\n    const val NO_CHOW = \"No.Chow\"\n    const val ALL_FIGURES_CLOSED = \"All.Figures.Closed\"\n    const val ALL_TILES_OF_ONE_COLOR_AND_PICTURES = \"All.Tiles.One.Color.And.Pictures\"\n    const val ALL_TILES_ONE_COLOR = \"All.Tiles.One.Color\"\n    const val MAHJONG_AT_BEGINNING = \"Mahjong.at.Beginning\"\n    const val ROBBING_THE_KANG = \"Beraubung.des.Kang\"\n    const val WINNING_TILE_IS_DISCARD_AFTER_END_OF_WALL = \"Schlussziegel.abgelegt.nach.Mauer\"\n    const val ONLY_MAINTILES = \"Only.Major.Tiles\"\n    const val ONLY_IMAGETILES = \"Only.Image.Tiles\"\n    const val WINNING_TILE_FROM_DEAD_WALL = \"Schlussziegel.tote.Mauer\"\n    const val WINNING_TILE_IS_LAST_TILE_FROM_WALL = \"Letzer.Ziegel.der.Mauer\"\n\n    const val ERR_NO_TILES_LEFT_FOR_PAIR = \"Not enough tiles left for a pair.\"\n    const val ERR_NO_TILES_LEFT_FOR_CHOW = \"Not enough tiles left for a Chow.\"\n    const val ERR_TILES_DOES_NOT_FIT_TO_CHOW_OR_PONG = \"Tile cannot be used for Pong or Chow in the selected set.\"\n    const val ERR_TILE_DOES_NOT_FIT_TO_SET = \"Tile does not fit to selected set.\"\n    const val ERR_NO_TILE_LEFT_FOR_KANG = \"No tile left for Kang.\"\n    const val ERR_TILE_INVALID_FOR_KANG = \"Invalid tile for Kang.\"\n\n}\n","package org.olafneumann.mahjong.points.lang\n\noperator fun String.not() = translate()\n\nprivate fun String.translate(): String = Language.current.translate(this)\n","package org.olafneumann.mahjong.points.model\n\nimport org.olafneumann.mahjong.points.game.Combination\nimport org.olafneumann.mahjong.points.game.Combination.Type.Chow\nimport org.olafneumann.mahjong.points.game.Combination.Type.Kang\nimport org.olafneumann.mahjong.points.game.Combination.Type.Pung\nimport org.olafneumann.mahjong.points.game.Combination.Type.Unfinished0\nimport org.olafneumann.mahjong.points.game.Combination.Type.UnfinishedPlus1\nimport org.olafneumann.mahjong.points.game.Combination.Visibility.Open\nimport org.olafneumann.mahjong.points.game.GameModifiers\nimport org.olafneumann.mahjong.points.game.Hand\nimport org.olafneumann.mahjong.points.game.Tile\nimport org.olafneumann.mahjong.points.game.Wind\nimport org.olafneumann.mahjong.points.lang.StringKeys\nimport org.olafneumann.mahjong.points.model.Figure.Bonus\nimport org.olafneumann.mahjong.points.model.Figure.Figure1\nimport org.olafneumann.mahjong.points.model.Figure.Pair\nimport org.olafneumann.mahjong.points.result.ClassicRulesResultComputer\nimport org.olafneumann.mahjong.points.result.PlayerResult\nimport org.olafneumann.mahjong.points.util.to\n\ndata class CalculatorModel(\n    val hand: Hand,\n    val gameModifiers: GameModifiers = GameModifiers(prevailingWind = Wind.East),\n    val seatWind: Wind = Wind.East,\n    val selectedFigure: Figure = Figure1,\n    val errorMessages: List<ErrorMessage> = emptyList(),\n) {\n    public fun withoutErrors() = evolve()\n\n    private fun evolve(\n        hand: Hand = this.hand,\n        gameModifiers: GameModifiers = this.gameModifiers,\n        seatWind: Wind = this.seatWind,\n        selectedFigure: Figure = this.selectedFigure,\n        vararg errorMessage: ErrorMessage\n    ): CalculatorModel =\n        copy(\n            hand = hand,\n            gameModifiers = gameModifiers,\n            seatWind = seatWind,\n            selectedFigure = selectedFigure,\n            errorMessages = errorMessage.asList()\n        )\n\n    private fun withError(tile: Tile, message: String): CalculatorModel =\n        evolve(errorMessage = arrayOf(ErrorMessage(tile = tile, message = message)))\n\n    private val availableTiles = run {\n        val allTilesInGame =\n            Tile.values().flatMap { tile -> MutableList(tile.numberOfTilesInSet) { tile } }.toMutableList()\n        hand.allTiles.forEach { allTilesInGame.remove(it) }\n        allTilesInGame.toList()\n    }\n\n    fun isAvailable(tile: Tile, times: Int = 1): Boolean =\n        availableTiles.filter { it == tile }.size >= times\n\n    fun select(figure: Figure): CalculatorModel =\n        evolve(selectedFigure = figure)\n\n    private fun canConsume(vararg tiles: Tile): Boolean {\n        val remaining = availableTiles.toMutableList()\n        return tiles.all { remaining.remove(it) }\n    }\n\n    fun select(tile: Tile): CalculatorModel {\n        if (tile.isBonusTile) {\n            return evolve(\n                hand = hand.copy(bonusTiles = hand.bonusTiles + tile),\n                selectedFigure = Bonus,\n            )\n        }\n        if (selectedFigure == Bonus) {\n            return this\n        }\n\n        if (tile.isTrump && hand.containsPungWith(tile)) {\n            return evolve(\n                hand = hand.allFigures.first { it.tile == tile }.replace(hand, type = Kang),\n                selectedFigure = selectedFigure.next,\n            )\n        }\n\n        if (selectedFigure == Pair) {\n            if (!canConsume(tile, tile)) {\n                return withError(tile, StringKeys.ERR_NO_TILES_LEFT_FOR_PAIR)\n            }\n            return evolve(\n                hand = hand.copy(pair = Combination(type = Combination.Type.Pair, tile = tile, visibility = Open)),\n            )\n        }\n\n        // combination exists, because 'bonus' has been handled before\n        val combination = hand.getCombination(selectedFigure)\n        if (combination == null) {\n            if (tile.isTrump) {\n                if (!canConsume(tile, tile, tile)) {\n                    return withError(tile, StringKeys.ERR_NO_TILES_LEFT_FOR_CHOW)\n                }\n                return evolve(\n                    hand = hand.setCombination(selectedFigure, Combination(Pung, tile, Open)),\n                )\n            }\n            return evolve(\n                hand = hand.setCombination(selectedFigure, Combination(Unfinished0, tile, Open)),\n            )\n        }\n        when (combination.type) {\n            Unfinished0 -> {\n                if (tile == combination.tile) {\n                    return evolve(\n                        hand = combination.replace(\n                            hand = hand,\n                            type = if (selectedFigure == Pair) Combination.Type.Pair else Pung\n                        ),\n                    )\n                }\n                // nächste Tile am Anfang\n                if (tile == combination.tile.next && combination.tile.number == 1) {\n                    return evolve(\n                        hand = combination.replace(hand = hand, type = Chow),\n                        selectedFigure = selectedFigure.next,\n                    )\n                }\n                // vorige Tile am Ende\n                if (tile == combination.tile.previous && combination.tile.number == 9) {\n                    return evolve(\n                        hand = combination.replace(hand = hand, tile = tile.previous!!, type = Chow),\n                        selectedFigure = selectedFigure.next,\n                    )\n                }\n                // übernächste Tile\n                if (tile == combination.tile.next?.next) {\n                    return evolve(\n                        hand = combination.replace(hand = hand, type = Chow),\n                        selectedFigure = selectedFigure.next,\n                    )\n                }\n                // nächste Tile\n                if (tile == combination.tile.next) {\n                    return evolve(\n                        hand = combination.replace(hand = hand, type = UnfinishedPlus1),\n                    )\n                }\n                // vorige Tile\n                if (tile == combination.tile.previous) {\n                    return evolve(\n                        hand = combination.replace(hand = hand, type = UnfinishedPlus1, tile),\n                    )\n                }\n                // vor-vorige Tile\n                if (tile == combination.tile.previous?.previous) {\n                    return evolve(\n                        hand = combination.replace(hand = hand, type = Chow, tile = tile),\n                        selectedFigure = selectedFigure.next,\n                    )\n                }\n                return withError(tile, StringKeys.ERR_TILES_DOES_NOT_FIT_TO_CHOW_OR_PONG)\n            }\n\n            UnfinishedPlus1 -> {\n                if (tile == combination.tile.next?.next) {\n                    return evolve(\n                        hand = combination.replace(hand = hand, type = Chow),\n                        selectedFigure = selectedFigure.next,\n                    )\n                }\n                if (tile == combination.tile.previous) {\n                    return evolve(\n                        hand = combination.replace(hand = hand, type = Chow, tile = tile),\n                        selectedFigure = selectedFigure.next,\n                    )\n                }\n                return withError(tile, StringKeys.ERR_TILE_DOES_NOT_FIT_TO_SET)\n            }\n\n            Pung -> {\n                if (combination.tile == tile) {\n                    if (!canConsume(tile)) {\n                        return withError(tile, StringKeys.ERR_NO_TILE_LEFT_FOR_KANG)\n                    }\n                    return evolve(\n                        hand = combination.replace(hand, type = Kang),\n                        selectedFigure = selectedFigure.next,\n                    )\n                }\n                return withError(tile, StringKeys.ERR_TILE_INVALID_FOR_KANG)\n            }\n\n            else -> return this\n        }\n    }\n\n    fun setGameModifiers(gameModifiers: GameModifiers) = evolve(\n        gameModifiers = gameModifiers,\n    )\n\n    fun setSeatWind(wind: Wind) = evolve(\n        seatWind = wind,\n    )\n\n    fun setOpen(figure: Figure, open: Boolean): CalculatorModel =\n        hand.getCombination(figure)?.let {\n            evolve(\n                hand = it.replace(hand = hand, visibility = Combination.Visibility.from(open)),\n            )\n        } ?: this\n\n    fun reset(figure: Figure): CalculatorModel {\n        if (figure == Bonus) {\n            return evolve(\n                hand = hand.copy(bonusTiles = emptySet()),\n            )\n        }\n        val combination = hand.getCombination(figure)\n        if (combination != null) {\n            return evolve(\n                hand = hand.replace(combination, null),\n            )\n        }\n        return this\n    }\n\n    fun forNextPlayer(moveSeatWind: Boolean): CalculatorModel =\n        evolve(\n            hand = Hand(),\n            seatWind = moveSeatWind.to(seatWind.next, seatWind),\n            selectedFigure = Figure1,\n        )\n\n    val isMahjong: Boolean = hand.isMahjong\n\n    val result: PlayerResult by lazy {\n        ClassicRulesResultComputer().computeResult(\n            hand,\n            gameModifiers,\n            seatWind = seatWind\n        )\n    }\n}\n","package org.olafneumann.mahjong.points.model\n\nimport org.olafneumann.mahjong.points.game.Tile\n\ndata class ErrorMessage(\n    val tile: Tile? = null,\n    val message: String? = null,\n)","package org.olafneumann.mahjong.points.model\n\nimport org.olafneumann.mahjong.points.Constants\nimport org.olafneumann.mahjong.points.game.Combination\nimport org.olafneumann.mahjong.points.game.Hand\nimport org.olafneumann.mahjong.points.game.Tile\nimport org.olafneumann.mahjong.points.model.Figure.Bonus\nimport org.olafneumann.mahjong.points.model.Figure.Figure1\nimport org.olafneumann.mahjong.points.model.Figure.Figure2\nimport org.olafneumann.mahjong.points.model.Figure.Figure3\nimport org.olafneumann.mahjong.points.model.Figure.Figure4\nimport org.olafneumann.mahjong.points.model.Figure.Pair\n\nenum class Figure {\n    Figure1,\n    Figure2,\n    Figure3,\n    Figure4,\n    Pair,\n    Bonus,\n    ;\n\n    val title = name\n\n    val next: Figure\n        get() = when (this) {\n            Figure1 -> Figure2\n            Figure2 -> Figure3\n            Figure3 -> Figure4\n            Figure4 -> Pair\n            Pair -> Bonus\n            Bonus -> Bonus\n        }\n\n    val maxTilesPerFigure: Int\n        get() = when (this) {\n            Figure1, Figure2, Figure3, Figure4 -> Constants.MAX_NUMBER_OF_TILES_IN_SET\n            Pair -> Constants.MAX_NUMBER_OF_TILES_IN_PAIR\n            Bonus -> Constants.MAX_NUMBER_OF_TILES_IN_BONUS\n        }\n}\n\nfun Hand.getCombination(figure: Figure): Combination? =\n    when (figure) {\n        Figure1 -> figure1\n        Figure2 -> figure2\n        Figure3 -> figure3\n        Figure4 -> figure4\n        Pair -> pair\n        else -> null\n    }\n\nfun Hand.setCombination(figure: Figure, combination: Combination): Hand =\n    when (figure) {\n        Figure1 -> copy(figure1 = combination)\n        Figure2 -> copy(figure2 = combination)\n        Figure3 -> copy(figure3 = combination)\n        Figure4 -> copy(figure4 = combination)\n        Pair -> copy(pair = combination)\n        else -> this\n    }\n\nfun Hand.getTiles(figure: Figure): Collection<Tile> =\n    when (figure) {\n        Figure.Bonus -> bonusTiles\n        else -> getCombination(figure)?.getTiles() ?: emptyList()\n    }\n","package org.olafneumann.mahjong.points.result\n\nimport org.olafneumann.mahjong.points.lang.StringKeys\nimport org.olafneumann.mahjong.points.game.Combination\nimport org.olafneumann.mahjong.points.game.Combination.Type\nimport org.olafneumann.mahjong.points.game.Combination.Type.Pung\nimport org.olafneumann.mahjong.points.game.Combination.Type.Chow\nimport org.olafneumann.mahjong.points.game.Combination.Type.Kang\nimport org.olafneumann.mahjong.points.game.Combination.Type.Pair\nimport org.olafneumann.mahjong.points.game.Combination.Visibility\nimport org.olafneumann.mahjong.points.game.Combination.Visibility.Open\nimport org.olafneumann.mahjong.points.game.Combination.Visibility.Closed\nimport org.olafneumann.mahjong.points.game.GameModifiers\nimport org.olafneumann.mahjong.points.game.Hand\nimport org.olafneumann.mahjong.points.game.Tile\nimport org.olafneumann.mahjong.points.game.Wind\nimport kotlin.math.pow\n\n// according to: http://dmjl.de/wp-content/uploads/2009/05/DMJL_CC_Wertung_2005.pdf\nclass ClassicRulesResultComputer : ResultComputer {\n    override fun computeResult(gameModifiers: GameModifiers, seatWind: Wind, hand: Hand): PlayerResult {\n        TODO(\"Not yet implemented\")\n    }\n\n    fun computeResult(hand: Hand, gameModifiers: GameModifiers, seatWind: Wind): PlayerResult {\n        val lines = listOf(\n            // Points\n            checkForChis(hand),\n            checkForPungs(hand),\n            checkForKangs(hand),\n            checkPairs(hand, gameModifiers, seatWind),\n            checkForFlowers(hand),\n            // Points for Mahjong\n            hand.isMahjong.map { checkMahjongPoints(hand, gameModifiers) },\n            // Doublings for all\n            checkDoublings(hand = hand, prevailingWind = gameModifiers.prevailingWind, seatWind = seatWind),\n            // Doublings for Mahjong\n            hand.isMahjong.map { checkMahjongDoublings(gameModifiers, hand) }\n        )\n            .mapNotNull { it }\n            .flatten()\n\n        val points = lines\n            .filter { it.points != 0 }\n            .sumOf { it.points * it.times }\n        val doublings = lines\n            .filter { it.doublings != 0 }\n            .sumOf { it.doublings }\n        val resultPoints = points * 2.0.pow(doublings)\n\n        return PlayerResult(lines = lines, points = points, doublings = doublings, result = resultPoints.toInt())\n    }\n\n    private fun checkForFlowers(hand: Hand): List<Line>? =\n        if (hand.bonusTiles.isNotEmpty()) {\n            listOf(\n                Line(description = StringKeys.KEY_BONUS_TILES, points = POINT_BONUS, times = hand.bonusTiles.size)\n            )\n        } else {\n            null\n        }\n\n    private fun checkForChis(hand: Hand) = (\n            hand.getFigures(Chow, Open)\n                .map { Line(description = StringKeys.KEY_CHOW_OPEN, points = 0) }\n                    + hand.getFigures(Chow, Closed)\n                .map { Line(description = StringKeys.KEY_CHOW_CLOSED, points = 0) }\n            )\n\n    private fun checkForPungs(hand: Hand) = (\n            hand.getFigures(Pung, Open, baseTile = true)\n                .map { Line(description = StringKeys.PUNG_BASETILE_OPEN, points = 2) }\n                    + hand.getFigures(Pung, Closed, baseTile = true)\n                .map { Line(description = StringKeys.PUNG_BASETILE_CLOSED, points = 4) }\n                    + hand.getFigures(Pung, Open, baseTile = false)\n                .map { Line(description = StringKeys.PUNG_MAINTILE_OPEN, points = 4) }\n                    + hand.getFigures(Pung, Closed, baseTile = false)\n                .map { Line(description = StringKeys.PUNG_MAINTILE_CLOSED, points = 8) }\n            )\n\n    private fun checkForKangs(hand: Hand) = (\n            hand.getFigures(Kang, Open, baseTile = true)\n                .map { Line(description = StringKeys.KANG_BASETILE_OPEN, points = 8) }\n                    + hand.getFigures(Kang, Closed, baseTile = true)\n                .map { Line(description = StringKeys.KANG_BASETILE_CLOSED, points = 16) }\n                    + hand.getFigures(Kang, Open, baseTile = false)\n                .map { Line(description = StringKeys.KANG_MAINTILE_OPEN, points = 16) }\n                    + hand.getFigures(Kang, Closed, baseTile = false)\n                .map { Line(description = StringKeys.KANG_MAINTILE_CLOSED, points = 32) }\n            )\n\n    private fun checkPairs(hand: Hand, gameModifiers: GameModifiers, seatWind: Wind) = (\n            hand.getFigures(Pair, tiles = Tile.dragons)\n                .map { Line(description = StringKeys.PAIR_OF_DRAGONS, points = 2) }\n            /* TODO Compute place wind and round wind\n     + hand.getFigures(Pair, tiles = Tile.winds)\n         .map { Line(description = \"Pair.Wind\", points = 2) }*/\n            )\n\n    private fun checkMahjongPoints(hand: Hand, gameModifiers: GameModifiers): List<Line> {\n        console.log(gameModifiers)\n        return listOf(\n            // Mahjong\n            Line(description = StringKeys.MAHJONG, points = 20),\n            // Schlussziegel von der Mauer\n            gameModifiers.schlussziegelVonMauer\n                .map { Line(StringKeys.WINNING_TILE_FROM_WALL, points = 2) },\n            // Schlussziegel ist einzig möglicher Stein\n            gameModifiers.schlussziegelEinzigMoeglicherZiegel\n                .map { Line(StringKeys.WINNING_TILE_ONLY_POSSIBLE_TILE, points = 2) },\n            // Schlussziegel komplettiert Paar aus Grundziegeln\n            (gameModifiers.schlussziegelKomplettiertPaar && (hand.pair?.tile?.isBaseTile ?: false))\n                .map { Line(StringKeys.WINNING_TILE_COMPLETES_PAIR_OF_MINOR_TILES, points = 2) },\n            // Schlussziegel komplettiert Paar aus Hauptziegeln\n            (gameModifiers.schlussziegelKomplettiertPaar && !(hand.pair?.tile?.isBaseTile ?: false))\n                .map { Line(StringKeys.WINNING_TILE_COMPLETES_PAIR_OF_MAJOR_TILES, points = 4) },\n        ).mapNotNull { it }\n    }\n\n    private fun checkDoublings(hand: Hand, prevailingWind: Wind, seatWind: Wind): List<Line> =\n        listOf(\n            listOf(\n                // Beide Bonusziegel des Platzwindes\n                (hand.pair?.getTiles()?.all { it.wind == seatWind } ?: false)\n                    .map { Line(description = StringKeys.PAIR_WIND_SEAT, doublings = 1) },\n                // alle Blumenziegel\n                hand.bonusTiles.containsAll(Tile.flowers)\n                    .map { Line(description = StringKeys.ALL_FLOWERS, doublings = 1) },\n                // Alle Jahreszeitenziegel\n                hand.bonusTiles.containsAll(Tile.seasons)\n                    .map { Line(description = StringKeys.ALL_SEASONS, doublings = 1) },\n            ),\n            // Pong oder Kang aus Drachen\n            hand.getFigures(Pung, tiles = Tile.dragons)\n                .map { Line(description = StringKeys.PUNG_DRAGONS, doublings = 1) },\n            hand.getFigures(Kang, tiles = Tile.dragons)\n                .map { Line(description = StringKeys.KANG_DRAGONS, doublings = 1) },\n            listOf(\n                // Pong/ Kang des Rundenwindes\n                hand.getFigures(Pung).any { it.tile.wind == prevailingWind }\n                    .map { Line(description = StringKeys.PUNG_PREVAILING_WIND, doublings = 1) },\n                hand.getFigures(Kang).any { it.tile.wind == prevailingWind }\n                    .map { Line(description = StringKeys.KANG_PREVAILING_WIND, doublings = 1) },\n                // drei verdeckte pong\n                hand.fullFigures.filter { it.type == Pung || it.type == Kang }\n                    .filter { it.visibility == Closed }\n                    .hasSize(3)\n                    .map { Line(description = StringKeys.THREE_CLOSED_PUNGS, doublings = 1) },\n                // kleine drei Drachen\n                (hand.fullFigures.filter { it.type == Pung || it.type == Kang }\n                    .filter { it.tile.isDragon }\n                    .hasSize(2)\n                        && hand.pair?.tile?.isDragon == true)\n                    .map { Line(description = StringKeys.SMALL_THREE_DRAGONS, doublings = 1) },\n                // große drei Drachen\n                hand.fullFigures.filter { it.type == Pung || it.type == Kang }\n                    .filter { it.tile.isDragon }\n                    .hasSize(3)\n                    .map { Line(description = StringKeys.BIG_THREE_DRAGONS, doublings = 2) },\n                // kleine drei Freunde\n                (hand.fullFigures.filter { it.type == Pung || it.type == Kang }\n                    .filter { it.tile.isWind }\n                    .hasSize(3)\n                        && hand.pair?.tile?.isWind == true)\n                    .map { Line(description = StringKeys.SMALL_THREE_FRIENDS, doublings = 1) },\n                // große drei Freunde\n                hand.fullFigures.filter { it.type == Pung || it.type == Kang }\n                    .filter { it.tile.isWind }\n                    .hasSize(4)\n                    .map { Line(description = StringKeys.BIG_FOUR_FRIENDS, doublings = 2) },\n            ),\n        )\n            .flatten()\n            .mapNotNull { it }\n\n    private fun checkMahjongDoublings(gameModifiers: GameModifiers, hand: Hand): List<Line> =\n        listOf(\n            // TODO Null-Punkte-Hand 1\n            listOf(\n                // Kein Chi\n                hand.getFigures(Chow).hasSize(0)\n                    .map { Line(description = StringKeys.NO_CHOW, doublings = 1) },\n                // Alle Figuren verdeckt\n                hand.getFigures(visibility = Closed).hasSize(5)\n                    .map { Line(description = StringKeys.ALL_FIGURES_CLOSED, doublings = 1) },\n                // Nur Ziegel einer Farbe und Bildziegel\n                (hand.allTilesOfFigures.map { it.color }.distinct().hasSize(2)\n                        && hand.allTilesOfFigures.mapNotNull { it.color }.distinct().hasSize(1))\n                    .map { Line(description = StringKeys.ALL_TILES_OF_ONE_COLOR_AND_PICTURES, doublings = 1) },\n                // Nur Ziegel einer Farbe\n                (hand.allTilesOfFigures.map { it.color }.distinct().hasSize(1)\n                        && hand.allTilesOfFigures.first().color != null)\n                    .map { Line(description = StringKeys.ALL_TILES_ONE_COLOR, doublings = 3) },\n                // Nur Hauptziegel\n                hand.allTilesOfFigures.all { !it.isBaseTile }\n                    .map { Line(description = StringKeys.ONLY_MAINTILES, doublings = 1) },\n                // Nur Bildziegel\n                hand.allTilesOfFigures.all { it.isImage }\n                    .map { Line(description = StringKeys.ONLY_IMAGETILES, doublings = 2) },\n                // Schlussziegel von der toten Mauer\n                gameModifiers.schlussziegelVonToterMauer\n                    .map { Line(description = StringKeys.WINNING_TILE_FROM_DEAD_WALL, doublings = 1) },\n                // mit dem letzten Ziegel der Mauer gewonnenes Spiel\n                gameModifiers.mitDemLetztenZiegelDerMauerGewonnen\n                    .map { Line(description = StringKeys.WINNING_TILE_IS_LAST_TILE_FROM_WALL, doublings = 1) },\n                // Schlussziegel: abgelegter Ziegel nach Abbau der Mauer 1\n                gameModifiers.schlussziegelIstAbgelegterZiegelNachAbbauDerMauer\n                    .map { Line(description = StringKeys.WINNING_TILE_IS_DISCARD_AFTER_END_OF_WALL, doublings = 1) },\n                // Beraubung des Kang\n                gameModifiers.beraubungDesKang\n                    .map { Line(description = StringKeys.ROBBING_THE_KANG, doublings = 1) },\n                // Mahjong-Ruf zu Beginn\n                gameModifiers.mahjongAtBeginning\n                    .map { Line(description = StringKeys.MAHJONG_AT_BEGINNING, doublings = 1) },\n            )\n\n        )\n            .flatten()\n            .mapNotNull { it }\n\n    companion object {\n        private const val POINT_BONUS = 4\n\n        private fun Collection<Any?>.hasSize(size: Int) = this.size == size\n\n        private fun Hand.getFigures(\n            type: Type? = null,\n            visibility: Visibility? = null,\n            baseTile: Boolean? = null,\n            tiles: Collection<Tile> = emptySet(),\n        ): List<Combination> =\n            allFigures.asSequence()\n                .filter { type == null || it.type == type }\n                .filter { visibility == null || it.visibility == visibility }\n                .filter { baseTile == null || it.tile.isBaseTile == baseTile }\n                .filter { tiles.isEmpty() || it.tile in tiles }\n                .toList()\n\n        private fun <T> Boolean.map(function: () -> T): T? =\n            if (this) {\n                function()\n            } else {\n                null\n            }\n    }\n}\n","package org.olafneumann.mahjong.points.result\n\ndata class Line(\n    val description: String,\n    val times: Int = 1,\n    val points: Int = 0,\n    val doublings: Int = 0,\n)\n","package org.olafneumann.mahjong.points.result\n\ndata class PlayerResult(\n    val lines: List<Line>,\n    val points: Int,\n    val doublings: Int,\n    val result: Int,\n)\n","package org.olafneumann.mahjong.points.ui.components\n\nimport kotlinx.dom.clear\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.dom.append\nimport org.w3c.dom.HTMLElement\n\nabstract class AbstractComponent(\n    private val parent: HTMLElement,\n    private val needClear: Boolean = false\n) {\n    private var initialCreation = true\n\n    fun buildUI() {\n        if (initialCreation) {\n            if (needClear) {\n                parent.clear()\n            }\n            parent.append { createUI() }\n        }\n        initialCreation = false\n        updateUI()\n    }\n\n    protected abstract fun TagConsumer<HTMLElement>.createUI()\n    protected open fun updateUI() {}\n}\n","package org.olafneumann.mahjong.points.ui.components\n\nimport kotlinx.browser.document\nimport kotlinx.html.ButtonType\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.button\nimport kotlinx.html.js.div\nimport kotlinx.html.js.onClickFunction\nimport kotlinx.html.span\nimport org.olafneumann.mahjong.points.game.Combination\nimport org.olafneumann.mahjong.points.lang.not\nimport org.olafneumann.mahjong.points.model.Figure\nimport org.olafneumann.mahjong.points.model.getCombination\nimport org.olafneumann.mahjong.points.model.getTiles\nimport org.olafneumann.mahjong.points.ui.controls.TileImage\nimport org.olafneumann.mahjong.points.ui.controls.TileImage.Companion.createTileImage\nimport org.olafneumann.mahjong.points.ui.html.MrAttributes\nimport org.olafneumann.mahjong.points.ui.html.filterAttributeIsPresent\nimport org.olafneumann.mahjong.points.ui.html.getAllChildren\nimport org.olafneumann.mahjong.points.ui.html.getElement\nimport org.olafneumann.mahjong.points.ui.html.injectRoot\nimport org.olafneumann.mahjong.points.ui.html.mrFigure\nimport org.olafneumann.mahjong.points.ui.html.verticalSwitch\nimport org.olafneumann.mahjong.points.ui.js.Popover\nimport org.olafneumann.mahjong.points.ui.model.UIModel\nimport org.olafneumann.mahjong.points.ui.model.UIModelChangeListener\nimport org.olafneumann.mahjong.points.util.toString\nimport org.w3c.dom.HTMLButtonElement\nimport org.w3c.dom.HTMLDivElement\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.HTMLInputElement\nimport org.w3c.dom.events.Event\nimport kotlin.properties.Delegates\n\nclass HandComponent(\n    parent: HTMLElement,\n    val model: UIModel,\n) : AbstractComponent(parent = parent), UIModelChangeListener {\n    private var selectableDivs: Map<Figure, HTMLDivElement> by Delegates.notNull()\n    private var figureTiles: MutableMap<Figure, MutableList<TileImage>> = mutableMapOf()\n    private var figureSwitches: Map<Figure, HTMLInputElement> by Delegates.notNull()\n    private var figurePopovers: Map<Figure, Popover> by Delegates.notNull()\n    private val btnUndo = document.getElement<HTMLButtonElement>(\"mr_btn_undo\")\n\n    init {\n        model.registerChangeListener(this)\n        document.addEventListener(\"click\", { hideAllPopovers() })\n        btnUndo.onclick = {\n            // TODO\n        }\n    }\n\n    private fun hideAllPopovers() {\n        figurePopovers.values.forEach { it.hide() }\n    }\n\n    override fun TagConsumer<HTMLElement>.createUI() {\n        injectRoot { element ->\n            selectableDivs = element.getAllChildren<HTMLDivElement>()\n                .filterAttributeIsPresent(MrAttributes.FIGURE)\n                .associateBy { Figure.valueOf(it.mrFigure!!) }\n            figureSwitches = element.getAllChildren<HTMLInputElement>()\n                .mapIndexed { index, input -> Figure.values()[index] to input }\n                .toMap()\n            figurePopovers = selectableDivs.map { it.key to createPopover(it.value, it.key) }\n                .toMap()\n        }\n            .div(classes = \"flex-fill mr-figure-list\") {\n                divForFigure(Figure.Figure1)\n                divForFigure(Figure.Figure2)\n                divForFigure(Figure.Figure3)\n                divForFigure(Figure.Figure4)\n                divForFigure(Figure.Pair)\n                divForFigure(Figure.Bonus)\n            }\n    }\n\n    private fun TagConsumer<HTMLElement>.divForFigure(figure: Figure) =\n        div(classes = \"row g-0\") {\n            val isBonus = figure == Figure.Bonus\n            div(classes = \"${isBonus.toString(\"col\", \"col-8 col-md-9\")} mr-figure border\") {\n                span { +!figure.title }\n                div(classes = \"mr-tile-container\") {\n                    figureTiles[figure] = mutableListOf()\n                    for (i in 1..figure.maxTilesPerFigure) {\n                        figureTiles[figure]!!.add(createTileImage(null))\n                    }\n                }\n                mrFigure = figure.name\n                onClickFunction = {\n                    it.stopPropagation()\n                    handleFigureClick(figure)\n                }\n            }\n            if (figure != Figure.Bonus) {\n                div(classes = \"${isBonus.toString(\"col\", \"col-4 col-md-3\")} px-1\") {\n                    verticalSwitch(\"Closed\", \"Open\") { model.setOpen(figure, figureSwitches[figure]!!.checked) }\n                }\n            }\n        }\n\n    private fun handleFigureClick(figure: Figure) {\n        if (model.calculatorModel.selectedFigure != figure) {\n            model.select(figure)\n            hideAllPopovers()\n            return\n        }\n\n        if (model.calculatorModel.hand.getTiles(figure).isNotEmpty()) {\n            figurePopovers[figure]?.toggle()\n        }\n    }\n\n    private fun createPopover(element: HTMLElement, figure: Figure) =\n        Popover(\n            element = element,\n            placement = Popover.Placement.Left,\n            trigger = Popover.Trigger.Manual,\n        ) {\n            button(classes = \"btn btn-danger\", type = ButtonType.button) {\n                +!\"Reset\"\n                onClickFunction = {\n                    model.reset(figure)\n                    hideAllPopovers()\n                }\n            }\n        }\n\n    override fun updateUI() {\n        selectableDivs.forEach { (figure, div) ->\n            div.classList.toggle(\"mr-selected\", figure == model.calculatorModel.selectedFigure)\n        }\n        Figure.values().forEach { figure ->\n            val imageTiles = figureTiles[figure]!!\n            val combination = model.calculatorModel.hand.getCombination(figure)\n            val isConcealed = combination?.let { it.visibility == Combination.Visibility.Closed } ?: false\n            val tiles = model.calculatorModel.hand.getTiles(figure).toList()//.sortedBy { it.ordinal }\n\n            for (index in 0 until figure.maxTilesPerFigure) {\n                imageTiles[index].tile = tiles.getOrNull(index)\n                imageTiles[index].isLastTileInRow = index == tiles.size - 1\n                imageTiles[index].backside = isConcealed && (index == 1 || (index == 2 && combination?.type == Combination.Type.Kang))\n            }\n        }\n        figureSwitches.forEach { (figure, input) ->\n            input.disabled = model.calculatorModel.hand.getCombination(figure) == null\n            input.checked = (model.calculatorModel.hand.getCombination(figure)?.visibility\n                ?: Combination.Visibility.Open) == Combination.Visibility.Open\n            input.dispatchEvent(Event(\"change\"));\n        }\n    }\n\n    override fun modelChanged(model: UIModel) {\n        buildUI()\n    }\n}\n",null,null,"package org.olafneumann.mahjong.points.ui.html\n\nimport kotlinx.html.CommonAttributeGroupFacade\nimport org.w3c.dom.Attr\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.get\n\nprivate fun CommonAttributeGroupFacade.getAttributeString(name: String): String =\n    attributes[name] ?: \"\"\n\nprivate fun CommonAttributeGroupFacade.setAttributeString(name: String, value: String) {\n    attributes[name] = value\n}\n\n object MrAttributes {\n    const val TILE = \"mr-tile\"\n    const val FIGURE = \"mr-figure\"\n}\n\nvar CommonAttributeGroupFacade.mrTile: String\n    get() = this.getAttributeString(MrAttributes.TILE)\n    set(newValue) = this.setAttributeString(MrAttributes.TILE, newValue)\n\nvar CommonAttributeGroupFacade.mrFigure: String\n    get() = this.getAttributeString(MrAttributes.FIGURE)\n    set(newValue) = this.setAttributeString(MrAttributes.FIGURE, newValue)\n\nvar HTMLElement.mrTile: String?\n    get() = getAttribute(MrAttributes.TILE)\n    set(value) { setAttribute(MrAttributes.TILE, value ?: \"\") }\n\nval HTMLElement.mrFigure: String?\n    get() = attributes[MrAttributes.FIGURE]?.value\n","package org.olafneumann.mahjong.points.ui.html\n\nimport kotlinx.html.ButtonType\nimport kotlinx.html.InputType\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.button\nimport kotlinx.html.div\nimport kotlinx.html.h5\nimport kotlinx.html.id\nimport kotlinx.html.input\nimport kotlinx.html.js.div\nimport kotlinx.html.js.onChangeFunction\nimport kotlinx.html.js.onClickFunction\nimport kotlinx.html.js.onInputFunction\nimport kotlinx.html.label\nimport kotlinx.html.small\nimport kotlinx.html.title\nimport org.olafneumann.mahjong.points.lang.not\nimport org.olafneumann.mahjong.points.util.nextHtmlId\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.HTMLInputElement\nimport org.w3c.dom.HTMLLabelElement\nimport org.w3c.dom.events.Event\nimport kotlin.js.json\nimport kotlin.properties.Delegates\nimport kotlin.reflect.KMutableProperty0\n\nfun TagConsumer<HTMLElement>.bsButton(\n    label: String,\n    tooltip: String? = null,\n    colorClass: String = \"primary\",\n    id: String? = null,\n    additionalAttributes: List<Pair<String, String>> = emptyList(),\n    onClickFunction: (Event) -> Unit = {}\n) =\n    button(classes = \"btn btn-$colorClass\", type = ButtonType.button) {\n        +!label\n        tooltip?.let { title = !it }\n        id?.let { this.id = it }\n        additionalAttributes.forEach {\n            attributes[it.first] = it.second\n        }\n        this.onClickFunction = onClickFunction\n    }\n\nfun TagConsumer<HTMLElement>.closeButton(\n    tooltip: String? = null,\n    additionalAttributes: List<Pair<String, String>> = emptyList(),\n    onClickFunction: (Event) -> Unit = {}\n) =\n    button(classes = \"btn-close\", type = kotlinx.html.ButtonType.button) {\n        additionalAttributes.forEach {\n            attributes[it.first] = it.second\n        }\n        attributes[\"aria-label\"] = !\"Close\"\n        tooltip?.let { this.title = !it }\n        this.onClickFunction = onClickFunction\n    }\n\nfun <T> TagConsumer<HTMLElement>.radioGroup(\n    label: String,\n    items: List<T>,\n    property: KMutableProperty0<RadioGroup<T>>? = null,\n    action: (T) -> Unit = {},\n) = capture2(property, { RadioGroup(it, items) }) {\n    div(classes = \"mb-1 mr-radio\") {\n        label { +!label }\n        div(classes = \"btn-group btn-group-sm\") {\n            items.forEach { item ->\n                val radioId = (label + item.toString()).asId\n                input(type = InputType.radio, classes = \"btn-check\", name = label.asId) {\n                    autoComplete = false\n                    id = radioId\n                    onInputFunction = {\n                        val input = it.target!! as HTMLInputElement\n                        if (input.checked) {\n                            action(item)\n                        }\n                    }\n                }\n                label(classes = \"btn btn-outline-primary\") {\n                    htmlFor = radioId\n                    +!item.toString()\n                }\n            }\n        }\n    }\n}\n\nfun TagConsumer<HTMLElement>.checkbox(\n    labelEnabled: String,\n    labelDisabled: String? = null,\n    property: KMutableProperty0<HTMLInputElement>? = null,\n    action: (Boolean) -> Unit = {}\n) {\n    var checkbox: HTMLInputElement by Delegates.notNull()\n    var label: HTMLLabelElement by Delegates.notNull()\n\n    injectRoot {\n        checkbox = it.getAllChildren<HTMLInputElement>().first()\n        label = it.getAllChildren<HTMLLabelElement>().first()\n    }.capture(property) {\n        val checkboxId = nextHtmlId\n        div(classes = \"form-check\") {\n            input(type = InputType.checkBox, classes = \"form-check-input\") {\n                value = \"\"\n                id = checkboxId\n                onInputFunction = {\n                    label.innerText = if (!checkbox.checked) !labelEnabled else !(labelDisabled ?: labelEnabled)\n                    action((it.target!! as HTMLInputElement).checked)\n                }\n            }\n            label(classes = \"form-check-label\") {\n                htmlFor = checkboxId\n                +!labelEnabled\n            }\n        }\n    }\n}\n\nfun TagConsumer<HTMLElement>.verticalSwitch(\n    labelEnabled: String,\n    labelDisabled: String? = null,\n    action: (Event) -> Unit\n) {\n    val htmlId = nextHtmlId\n    var checkbox: HTMLInputElement by Delegates.notNull()\n    var label: HTMLLabelElement by Delegates.notNull()\n\n    injectRoot {\n        checkbox = it.getAllChildren<HTMLInputElement>().first()\n        label = it.getAllChildren<HTMLLabelElement>().first()\n        /*val width = max(it.getTextWidth(labelEnabled), it.getTextWidth(labelDisabled ?: labelEnabled))\n        label.style.width = \"${width}px\"*/\n    }.div(classes = \"d-flex flex-column justify-content-center align-items-center mr-vertical-switch mr-full-height\") {\n        div(classes = \"form-check form-switch\") {\n            input(classes = \"form-check-input\", type = InputType.checkBox) {\n                id = htmlId\n                onInputFunction = action\n                onChangeFunction = {\n                    val labelText = if (!checkbox.checked) !labelEnabled else !(labelDisabled ?: labelEnabled)\n                    label.innerText = labelText\n                    label.title = labelText\n                }\n                checked = true\n            }\n        }\n        small {\n            label(classes = \"form-check-label\") {\n                htmlFor = htmlId\n                title = !labelEnabled\n                +!labelEnabled\n            }\n        }\n    }\n}\n\nfun TagConsumer<HTMLElement>.modal(\n    title: String,\n    onCloseButtonClickFunction: (Event) -> Unit,\n    block: TagConsumer<HTMLElement>.() -> Unit = {}\n) =\n    div(classes = \"modal fade\") {\n        div(classes = \"modal-dialog modal-dialog-scrollable modal-dialog-centered\") {\n            div(classes = \"modal-content\") {\n                div(classes = \"modal-header\") {\n                    h5(classes = \"modal-title\") { +!title }\n                    closeButton(additionalAttributes = listOf(\"data-bs-dismiss\" to \"modal\"))\n                }\n                div(classes = \"modal-body\") {\n                    block()\n                }\n                div(classes = \"modal-footer\") {\n                    bsButton(\"Close\", onClickFunction = onCloseButtonClickFunction)\n                }\n            }\n        }\n    }\n\nfun TagConsumer<HTMLElement>.modal2(\n    title: String,\n    buttons: List<Button> = emptyList(),\n    mainBlock: TagConsumer<HTMLElement>.() -> Unit = {}\n) =\n    injectRoot { element ->\n        element.addEventListener(\"hidden.bs.modal\", { element.remove() })\n    }\n        .div(classes = \"modal fade\") {\n            div(classes = \"modal-dialog modal-dialog-centered\") {\n                div(classes = \"modal-content\") {\n                    div(classes = \"modal-header\") {\n                        h5(classes = \"modal-title\") { +!title }\n                        closeButton(additionalAttributes = listOf(\"data-bs-dismiss\" to \"modal\"))\n                    }\n                    div(classes = \"modal-body\") {\n                        mainBlock()\n                    }\n                    div(classes = \"modal-footer\") {\n                        buttons.forEach {\n                            bsButton(label = it.title, colorClass = it.colorClass, onClickFunction = it.onClickFunction)\n                        }\n                    }\n                }\n            }\n        }\n\ndata class Button(\n    val title: String,\n    val colorClass: String = \"primary\",\n    val onClickFunction: (Event) -> Unit\n)\n\nprivate val String.asId: String get() = replace(Regex(\"\\\\s+\"), \"\")\n\nclass RadioGroup<T> internal constructor(\n    elements: List<HTMLInputElement>,\n    items: List<T>,\n) {\n    private val inputs: Map<T, HTMLInputElement>\n\n    init {\n        inputs = elements\n            .filter { it.type == \"radio\" }\n            .mapIndexed { index, radio -> items[index] to radio }\n            .toMap()\n    }\n\n    fun select(item: T) {\n        inputs[item]?.checked = true\n    }\n\n    fun selection(): T? = inputs.filterValues { it.checked }\n        .map { it.key }\n        .firstOrNull()\n}\n\n\nfun createModal(element: HTMLElement, static: Boolean = true): Modal {\n    val options = createOptionsJson(static = static)\n    val modal = js(\"new bootstrap.Modal(element, options)\")\n    return modal.unsafeCast<Modal>()\n}\n\nprivate fun createOptionsJson(static: Boolean) = json(\n    *listOf(\n        \"backdrop\" to if (static) {\n            \"static\"\n        } else {\n            \"\"\n        },\n        \"focus\" to true,\n        \"keyboard\" to true\n    )\n        //.filter { it.second != null }\n        .toTypedArray()\n)\n\n\nexternal class Modal {\n    fun show()\n    fun hide()\n}\n\n","package org.olafneumann.mahjong.points.ui.html\n\nimport org.w3c.dom.Element\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.Node\nimport org.w3c.dom.asList\n\nfun Element.getAllChildren(): Sequence<Element> =\n    children.asList().asSequence().selectRecursive { children.asList().asSequence() }\n\ninline fun <reified T : HTMLElement> Element.getAllChildren() =\n    getAllChildren().filterIsInstance<T>()\n\nfun Node.getAllChildNodes(): Sequence<Node> =\n    childNodes.asList().asSequence().selectRecursive { childNodes.asList().asSequence() }\n\nfun <T : Element> Sequence<T>.filterAttributeIsPresent(attributeName: String) =\n    filter { it.hasAttribute(attributeName) }\n\nfun <T: HTMLElement> Sequence<T>.filterClassIsPresent(className: String) =\n    filter { it.classList.contains(className) }\n\n// https://stackoverflow.com/questions/66755991/kotlin-get-all-children-recursively\nprivate fun <T> Sequence<T>.selectRecursive(recursiveSelector: T.() -> Sequence<T>): Sequence<T> = flatMap {\n    sequence {\n        yield(it)\n        yieldAll(it.recursiveSelector().selectRecursive(recursiveSelector))\n    }\n}\n","package org.olafneumann.mahjong.points.ui.components\n\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.div\nimport kotlinx.html.form\nimport org.olafneumann.mahjong.points.game.GameModifiers\nimport org.olafneumann.mahjong.points.game.Wind\nimport org.olafneumann.mahjong.points.ui.html.RadioGroup\nimport org.olafneumann.mahjong.points.ui.html.checkbox\nimport org.olafneumann.mahjong.points.ui.html.radioGroup\nimport org.olafneumann.mahjong.points.ui.model.UIModel\nimport org.olafneumann.mahjong.points.ui.model.UIModelChangeListener\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.HTMLInputElement\nimport kotlin.properties.Delegates\n\nclass OptionsComponent(\n    parent: HTMLElement,\n    private val model: UIModel\n) : AbstractComponent(parent = parent), UIModelChangeListener {\n    private var rdaPrevailingWind: RadioGroup<Wind> by Delegates.notNull()\n    private var rdaSeatWind: RadioGroup<Wind> by Delegates.notNull()\n    private var chkSchlussziegelVonDerMauer: HTMLInputElement by Delegates.notNull()\n    private var chkSchlussziegelIstEinzigMoeglicherZiegel: HTMLInputElement by Delegates.notNull()\n    private var chkSchlussziegelKomplettiertPaar: HTMLInputElement by Delegates.notNull()\n    private var chkSchlussziegelVonDerTotenMauer: HTMLInputElement by Delegates.notNull()\n    private var chkMitDemLetztenZiegel: HTMLInputElement by Delegates.notNull()\n    private var chkSchlussziegelIstAbgelegterZiegelNachLetztem: HTMLInputElement by Delegates.notNull()\n    private var chkBeraubungDesKang: HTMLInputElement by Delegates.notNull()\n    private var chkMahjongZuBeginn: HTMLInputElement by Delegates.notNull()\n\n    init {\n        model.registerChangeListener(this)\n    }\n\n    private val gameModifiers: GameModifiers get() = model.calculatorModel.gameModifiers\n\n    override fun TagConsumer<HTMLElement>.createUI() {\n        div(classes = \"flex-fill\") {\n            form {\n                div(classes = \"row g-0\") {\n                    div(classes = \"col-6 col-lg-12\") {\n                        radioGroup(\"Prevailing Wind\", Wind.values().asList(), this@OptionsComponent::rdaPrevailingWind) {\n                            model.setGameModifiers(gameModifiers.copy(prevailingWind = it))\n                        }\n                        radioGroup(\"Seat Wind\", Wind.values().asList(), this@OptionsComponent::rdaSeatWind) {\n                            model.setSeatWind(it)\n                        }\n                        div(classes = \"mt-3\") {\n                            checkbox(\n                                \"Schlussziegel von der Mauer\",\n                                property = this@OptionsComponent::chkSchlussziegelVonDerMauer\n                            ) {\n                                model.setGameModifiers(gameModifiers.copy(schlussziegelVonMauer = it))\n                            }\n                            checkbox(\n                                \"Schlussziegel ist einzig möglicher Ziegel\",\n                                property = this@OptionsComponent::chkSchlussziegelIstEinzigMoeglicherZiegel\n                            ) { model.setGameModifiers(gameModifiers.copy(schlussziegelEinzigMoeglicherZiegel = it)) }\n                        }\n                    }\n                    div(classes = \"col-6 col-lg-12\") {\n                        checkbox(\n                            \"Schlussziegel komplettiert Paar\",\n                            property = this@OptionsComponent::chkSchlussziegelKomplettiertPaar\n                        ) {\n                            model.setGameModifiers(gameModifiers.copy(schlussziegelKomplettiertPaar = it))\n                        }\n                        checkbox(\n                            \"Schlussziegel von der toten Mauer\",\n                            property = this@OptionsComponent::chkSchlussziegelVonDerTotenMauer\n                        ) {\n                            model.setGameModifiers(gameModifiers.copy(schlussziegelVonToterMauer = it))\n                        }\n                        checkbox(\n                            \"mit dem letzten Ziegel der Mauer gewonnen\",\n                            property = this@OptionsComponent::chkMitDemLetztenZiegel\n                        ) {\n                            model.setGameModifiers(gameModifiers.copy(mitDemLetztenZiegelDerMauerGewonnen = it))\n                        }\n                        checkbox(\n                            \"Schlussziegel ist abgelegter Ziegel nach Abbau der Mauer\",\n                            property = this@OptionsComponent::chkSchlussziegelIstAbgelegterZiegelNachLetztem\n                        ) { model.setGameModifiers(gameModifiers.copy(schlussziegelIstAbgelegterZiegelNachAbbauDerMauer = it)) }\n                        checkbox(\"Beraubung des Kang\", property = this@OptionsComponent::chkBeraubungDesKang) {\n                            model.setGameModifiers(gameModifiers.copy(beraubungDesKang = it))\n                        }\n                        checkbox(\"Mahjong-Ruf zu Beginn\", property = this@OptionsComponent::chkMahjongZuBeginn) {\n                            model.setGameModifiers(gameModifiers.copy(mahjongAtBeginning = it))\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    override fun updateUI() {\n        val isMahjong = model.calculatorModel.isMahjong\n\n        rdaPrevailingWind.select(gameModifiers.prevailingWind)\n        rdaSeatWind.select(model.calculatorModel.seatWind)\n\n        // checked or not\n        chkSchlussziegelVonDerMauer.checked = isMahjong && gameModifiers.schlussziegelVonMauer\n        chkSchlussziegelIstEinzigMoeglicherZiegel.checked =\n            isMahjong && gameModifiers.schlussziegelEinzigMoeglicherZiegel\n        chkSchlussziegelKomplettiertPaar.checked = isMahjong && gameModifiers.schlussziegelKomplettiertPaar\n        chkSchlussziegelVonDerTotenMauer.checked = isMahjong && gameModifiers.schlussziegelVonToterMauer\n        chkMitDemLetztenZiegel.checked = isMahjong && gameModifiers.mitDemLetztenZiegelDerMauerGewonnen\n        chkSchlussziegelIstAbgelegterZiegelNachLetztem.checked =\n            isMahjong && gameModifiers.schlussziegelIstAbgelegterZiegelNachAbbauDerMauer\n        chkBeraubungDesKang.checked = isMahjong && gameModifiers.beraubungDesKang\n        chkMahjongZuBeginn.checked = isMahjong && gameModifiers.mahjongAtBeginning\n\n        // activated or not\n        chkSchlussziegelVonDerMauer.disabled = !isMahjong\n        chkSchlussziegelIstEinzigMoeglicherZiegel.disabled = !isMahjong\n        chkSchlussziegelKomplettiertPaar.disabled = !isMahjong\n        chkSchlussziegelVonDerTotenMauer.disabled = !isMahjong\n        chkMitDemLetztenZiegel.disabled = !isMahjong\n        chkSchlussziegelIstAbgelegterZiegelNachLetztem.disabled = !isMahjong\n        chkBeraubungDesKang.disabled = !isMahjong\n        chkMahjongZuBeginn.disabled = !isMahjong\n    }\n\n    override fun modelChanged(model: UIModel) {\n        buildUI()\n    }\n}\n","package org.olafneumann.mahjong.points.ui.components\n\nimport kotlinx.browser.document\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.js.div\nimport kotlinx.html.js.p\nimport org.olafneumann.mahjong.points.lang.not\nimport org.olafneumann.mahjong.points.ui.controls.showResultTable\nimport org.olafneumann.mahjong.points.ui.html.bsButton\nimport org.olafneumann.mahjong.points.ui.html.getElement\nimport org.olafneumann.mahjong.points.ui.html.injectRoot\nimport org.olafneumann.mahjong.points.ui.js.Popover\nimport org.olafneumann.mahjong.points.ui.model.UIModel\nimport org.olafneumann.mahjong.points.ui.model.UIModelChangeListener\nimport org.w3c.dom.HTMLButtonElement\nimport org.w3c.dom.HTMLElement\nimport kotlin.properties.Delegates\n\nclass ResultComponent(\n    parent: HTMLElement,\n    private val model: UIModel\n) : AbstractComponent(parent = parent), UIModelChangeListener {\n    init {\n        model.registerChangeListener(this)\n    }\n\n    override fun TagConsumer<HTMLElement>.createUI() {\n        var popover: Popover by Delegates.notNull()\n        var resetButton: HTMLButtonElement by Delegates.notNull()\n\n        injectRoot {\n            resetButton = document.getElement(\"mr_reset_all\")\n        }\n            .div(classes = \"flex-fill d-flex flex-column flex-lg-row\") {\n                div(classes = \"flex-fill\") {\n                    bsButton(\n                        label = \"Compute\",\n                        tooltip = \"Compute points of current hand\",\n                        colorClass = \"primary flex-fill\"\n                    ) {\n                        showResultTable(model.calculatorModel.result) { model.setNextPlayer() }\n                    }\n                }\n                div(classes = \"ps-lg-2 pt-2 pt-lg-0\") {\n                    bsButton(\n                        label = \"Reset\",\n                        tooltip = \"Reset current hand\",\n                        colorClass = \"danger\",\n                        id = \"mr_reset_all\",\n                    ) {\n                        it.stopPropagation()\n                        popover.show()\n                    }\n                }\n            }\n\n        popover = Popover(\n            element = resetButton,\n            title = \"Reset current hand\",\n            trigger = Popover.Trigger.Manual,\n            hideOnOutsideClick = true\n        ) {\n            div {\n                // onClickFunction = { it.stopPropagation() }\n                p {\n                    +!\"Do you really want to reset your input?\"\n                }\n                bsButton(\"Reset\", colorClass = \"danger\") {\n                    popover.hide()\n                    model.reset()\n                }\n            }\n        }\n    }\n\n    override fun updateUI() {\n    }\n\n    override fun modelChanged(model: UIModel) {\n        buildUI()\n    }\n}\n","package org.olafneumann.mahjong.points.ui.controls\n\nimport kotlinx.browser.document\nimport kotlinx.html.Entities\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.dom.create\nimport kotlinx.html.js.div\nimport kotlinx.html.js.span\nimport kotlinx.html.sup\nimport org.olafneumann.mahjong.points.result.Line\nimport org.olafneumann.mahjong.points.result.PlayerResult\nimport org.olafneumann.mahjong.points.ui.html.Button\nimport org.olafneumann.mahjong.points.ui.html.Modal\nimport org.olafneumann.mahjong.points.ui.html.createModal\nimport org.olafneumann.mahjong.points.ui.html.modal2\nimport org.olafneumann.mahjong.points.lang.not\nimport org.w3c.dom.HTMLElement\nimport kotlin.properties.Delegates\n\nfun showResultTable(result: PlayerResult, onNextPlayerClick: () -> Unit = {}) {\n    var modal: Modal by Delegates.notNull()\n    val element = document.create.modal2(\n        title = \"Point Calculation\",\n        buttons = listOf(\n            Button(title = \"Next Player\", colorClass = \"secondary\") { onNextPlayerClick(); modal.hide() },\n            Button(title = \"Close\") { modal.hide() }\n        )\n    ) { resultTable(result) }\n    modal = createModal(element)\n    modal.show()\n}\n\nprivate fun TagConsumer<HTMLElement>.resultTable(result: PlayerResult) =\n    div(classes = \"mr-result\") {\n        div(classes = \"mr-result-points\") {\n            resultPart(\n                heading = \"Points\",\n                lines = result.lines.filter { it.doublings == 0 },\n                sum = result.points\n            )\n            resultPart(\n                heading = \"Doublings\",\n                lines = result.lines.filter { it.doublings != 0 },\n                sum = result.doublings\n            )\n            div(classes = \"mr-result-part mr-result-final\") {\n                /*span(classes = \"mr-result-heading\") {\n                    +!\"Ergebnis\"\n                }*/\n                /*if (result.doublings > 0) {\n                    pointRow(\"Anwendung Verdoppelungen\", power = result.doublings, points = result.points)\n                }*/\n                pointSumRow(\"Final Result\", points = result.points, doublings = result.doublings, result.result)\n            }\n        }\n    }\n\nprivate fun TagConsumer<HTMLElement>.pointRow(line: Line) =\n    pointRow(line.description, line.doublings, line.times, line.points)\n\nprivate fun TagConsumer<HTMLElement>.pointRow(\n    description: String,\n    doublings: Int = 0,\n    times: Int = 1,\n    points: Int = 0,\n) =\n    div(classes = \"mr-result-row\") {\n        div(classes = \"mr-result-row-heading\") {\n            +!description\n        }\n        div(classes = \"mr-result-row-points\") {\n            if (doublings != 0) {\n                span { +doublings.toString() }\n            }\n            if (times > 1) {\n                span(classes = \"mr-explanation\") {\n                    +times.toString()\n                    +\" \"\n                    +Entities.times\n                    +\" \"\n                    +points.toString()\n                    +\" =\"\n                }\n            }\n            if (doublings == 0) {\n                span { +(points * times).toString() }\n            }\n        }\n    }\n\nprivate fun TagConsumer<HTMLElement>.pointSumRow(description: String, points: Int, doublings: Int, result: Int) =\n    div(classes = \"mr-result-sum-row\") {\n        div(classes = \"mr-result-row-heading\") {\n            +!description\n        }\n        div(classes = \"mr-result-row-points\") {\n            if (doublings > 0) {\n                span(classes = \"mr-explanation\") {\n                    +\"2\"\n                    sup { +doublings.toString() }\n                    +\" \"\n                    +Entities.times\n                    +\" \"\n                    +points.toString()\n                    +\" =\"\n                }\n            }\n            span { +result.toString() }\n        }\n    }\n\nprivate fun TagConsumer<HTMLElement>.resultPart(heading: String, lines: List<Line>, sum: Int) =\n    div(classes = \"mr-result-part\") {\n        div(classes = \"mr-result-heading\") {\n            +!heading\n        }\n        lines.forEach { pointRow(it) }\n        pointSumRow(\"Sum $heading\", 0, 0, sum)\n    }\n","package org.olafneumann.mahjong.points.ui.components\n\nimport kotlinx.browser.window\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.div\nimport kotlinx.html.dom.append\nimport kotlinx.html.param\nimport org.olafneumann.mahjong.points.game.Tile\nimport org.olafneumann.mahjong.points.ui.controls.ErrorOverlay\nimport org.olafneumann.mahjong.points.ui.controls.ErrorOverlay.Companion.createErrorOverlay\nimport org.olafneumann.mahjong.points.ui.controls.TileImage\nimport org.olafneumann.mahjong.points.ui.controls.TileImage.Companion.createTileImage\nimport org.olafneumann.mahjong.points.ui.model.UIModel\nimport org.olafneumann.mahjong.points.ui.model.UIModelChangeListener\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.events.Event\nimport kotlin.properties.Delegates\n\nclass TileSelectionComponent(\n    private val parent: HTMLElement,\n    private val model: UIModel\n) : AbstractComponent(parent = parent), UIModelChangeListener {\n    private var imageTiles: Map<Tile, TileImage> by Delegates.notNull()\n    private var errorOverlay: ErrorOverlay by Delegates.notNull()\n\n    init {\n        model.registerChangeListener(this)\n    }\n\n    override fun TagConsumer<HTMLElement>.createUI() {\n        val imageTiles = mutableMapOf<Tile, TileImage>()\n        div(classes = \"mr-tile-field mr-tile-container d-flex flex-column justify-content-between flex-fill\") {\n            div { imageTiles.putAll(tileImages(Tile.bamboos)) }\n            div { imageTiles.putAll(tileImages(Tile.characters)) }\n            div { imageTiles.putAll(tileImages(Tile.circles)) }\n            div {\n                imageTiles.putAll(tileImages(Tile.winds))\n                createTileImage(null)\n                createTileImage(null)\n                imageTiles.putAll(tileImages(Tile.dragons))\n            }\n            div {\n                imageTiles.putAll(tileImages(Tile.flowers))\n                createTileImage(null)\n                imageTiles.putAll(tileImages(Tile.seasons))\n            }\n        }\n        this@TileSelectionComponent.imageTiles = imageTiles\n\n        // error overlay\n        parent.parentElement!!.append {\n            errorOverlay = createErrorOverlay()\n        }\n    }\n\n    private fun TagConsumer<HTMLElement>.tileImages(tiles: Collection<Tile>): Map<Tile, TileImage> =\n        tiles.associateWith { createTileImage(tile = it, onClickFunction = createOnClickListener(it)) }\n\n    private fun createOnClickListener(tile: Tile): (Event) -> Unit = {\n        if (tile.isSelectable) {\n            model.select(tile)\n        }\n    }\n\n    override fun updateUI() {\n        imageTiles.forEach { (tile, element) ->\n            element.selectable = tile.isSelectable\n        }\n\n        model.calculatorModel.errorMessages.forEach { errorMessage ->\n            errorMessage.tile?.let { imageTiles[it]?.blinkForAlert() }\n        }\n        errorOverlay.show(model.calculatorModel.errorMessages.mapNotNull { it.message }, 3000)\n    }\n\n    override fun modelChanged(model: UIModel) {\n        buildUI()\n    }\n\n    private val Tile.isSelectable: Boolean get() = model.calculatorModel.isAvailable(this)\n}\n","package org.olafneumann.mahjong.points.ui.controls\n\nimport kotlinx.browser.window\nimport kotlinx.dom.clear\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.dom.append\nimport kotlinx.html.js.div\nimport kotlinx.html.js.p\nimport kotlinx.html.js.span\nimport kotlinx.html.role\nimport kotlinx.html.style\nimport org.olafneumann.mahjong.points.lang.not\nimport org.olafneumann.mahjong.points.ui.html.injectRoot\nimport org.olafneumann.mahjong.points.ui.js.asJQuery\nimport org.w3c.dom.HTMLDivElement\nimport org.w3c.dom.HTMLElement\n\nclass ErrorOverlay private constructor(\n    val outer: HTMLDivElement,\n    val inner: HTMLDivElement,\n) {\n    private val jquery = outer.asJQuery()\n\n    fun show(messages: Collection<String>, delay: Int) {\n        if (messages.isEmpty()) {\n            return\n        }\n\n        inner.clear()\n        inner.append {\n            messages.forEach {\n                span {\n                    +!it\n                }\n            }\n        }\n        showBox()\n        window.setTimeout({ hideBox() }, delay)\n    }\n\n    private fun showBox() = jquery.fadeIn()\n\n    private fun hideBox() = jquery.fadeOut()\n\n    companion object {\n        fun TagConsumer<HTMLElement>.createErrorOverlay(): ErrorOverlay {\n            /*<div style=\"\n                    position: absolute;\n                    top: 0;\n                    /* width: 100%; */\n                    /* background: red; */\n                    z-index: 2000;\n                    right: 0.5rem;\n                    left: 0;\n                    /* padding-left: 1rem; */\n                    \" class=\"rounded-bottom p-3\"><div class=\"alert alert-danger\" role=\"alert\">\n                    A simple primary alert—check it out!\n                    </div></div>*/\n\n\n            var outer: HTMLDivElement? = null\n            var inner: HTMLDivElement? = null\n            injectRoot { outer = it as HTMLDivElement }\n                .div(classes = \"mr-error-overlay p-3\") {\n                    style = \"display:none;\"\n                    injectRoot { inner = it as HTMLDivElement }\n                        .div(classes = \"alert alert-danger\") {\n                            role = \"alert\"\n                            +\"Error Message\"\n                        }\n                }\n            return ErrorOverlay(outer = outer!!, inner = inner!!)\n        }\n    }\n}","package org.olafneumann.mahjong.points.ui.controls\n\nimport org.olafneumann.mahjong.points.lang.not\nimport org.olafneumann.mahjong.points.ui.html.filterAttributeIsPresent\nimport org.olafneumann.mahjong.points.ui.html.getAllChildNodes\nimport org.olafneumann.mahjong.points.ui.html.getAllChildren\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.Text\n\nobject MainPage {\n    fun translate(element: HTMLElement) {\n        element.getAllChildNodes()\n            .filterIsInstance<Text>()\n            .filter { !it.nodeValue.isNullOrBlank() }\n            .forEach { it.nodeValue = !it.nodeValue!! }\n        element.getAllChildren()\n            .filterAttributeIsPresent(\"title\")\n            .filter { !it.getAttribute(\"title\").isNullOrBlank() }\n            .forEach { it.setAttribute(\"title\", !it.getAttribute(\"title\")!!) }\n    }\n}\n","package org.olafneumann.mahjong.points.ui.controls\n\nimport kotlinx.browser.window\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.js.div\nimport kotlinx.html.js.onClickFunction\nimport org.olafneumann.mahjong.points.game.Tile\nimport org.olafneumann.mahjong.points.ui.html.injectRoot\nimport org.olafneumann.mahjong.points.ui.html.mrTile\nimport org.w3c.dom.HTMLDivElement\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.events.Event\n\nclass TileImage private constructor(\n    private val outer: HTMLDivElement,\n    private val inner: HTMLDivElement,\n    tile: Tile?\n) {\n    var tile: Tile? = null\n        set(value) {\n            field = value\n            setTileName(tile?.name)\n            activateBackground(tile != null)\n            showTile(tile != null)\n            if (value == null) {\n                backside = false\n            }\n        }\n\n    var backside: Boolean\n        get() = outer.classList.contains(CLS_BACKSIDE)\n        set(value) {\n            outer.classList.toggle(CLS_ROTATED, value)\n            window.setTimeout({ outer.classList.toggle(CLS_BACKSIDE, value) }, 250)\n        }\n\n    var selectable: Boolean\n        get() = !outer.classList.contains(CLS_NOT_SELECTABLE)\n        set(value) {\n            outer.classList.toggle(CLS_NOT_SELECTABLE, !value)\n        }\n\n    var isLastTileInRow: Boolean\n        get() = outer.classList.contains(CLS_BS_FLEX_SHRINK_0)\n        set(value) { outer.classList.toggle(CLS_BS_FLEX_SHRINK_0, value) }\n\n    fun blinkForAlert() {\n        toggleAlert(true)\n        window.setTimeout({ toggleAlert(false) }, 1000)\n    }\n\n    private fun toggleAlert(enabled: Boolean) {\n        outer.classList.toggle(CLS_ALERT, enabled)\n    }\n\n\n    private fun activateBackground(enabled: Boolean) =\n        outer.classList.toggle(CLS_BACKGROUND, enabled)\n\n    private fun showTile(show: Boolean) =\n        outer.classList.toggle(CLS_BS_D_NONE, !show)\n\n    private fun setTileName(name: String?) {\n        inner.mrTile = name ?: \"\"\n    }\n\n    init {\n        this.tile = tile\n    }\n\n    companion object {\n        private const val CLS_BACKSIDE = \"mr-tile-backside\"\n        private const val CLS_ROTATED = \"mr-tile-rotated\"\n        private const val CLS_BACKGROUND = \"mr-tile-background\"\n        private const val CLS_ALERT = \"mr-alert\"\n        private const val CLS_NOT_SELECTABLE = \"not-selectable\"\n        private const val CLS_BS_D_NONE = \"mr-invisible\"\n        private const val CLS_BS_FLEX_SHRINK_0 = \"flex-shrink-0\"\n\n        fun TagConsumer<HTMLElement>.createTileImage(tile: Tile?, onClickFunction: (Event) -> Unit = {}): TileImage {\n            var outer: HTMLDivElement? = null\n            var inner: HTMLDivElement? = null\n            injectRoot { outer = it as HTMLDivElement }\n                .div(classes = \"mr-tile\") {\n                    injectRoot { inner = it as HTMLDivElement }\n                        .div(classes = \"mr-tile-face\") {\n                        }\n                    this.onClickFunction = onClickFunction\n                }\n            return TileImage(outer = outer!!, inner = inner!!, tile = tile)\n        }\n    }\n}\n","package org.olafneumann.mahjong.points.ui.html\n\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.injector.CustomCapture\nimport org.w3c.dom.HTMLElement\nimport kotlin.reflect.KMutableProperty0\n\n// https://github.com/Kotlin/kotlinx.html/wiki/Injector\n\ninline fun <reified T : HTMLElement> TagConsumer<HTMLElement>.capture(\n    property: KMutableProperty0<T>?,\n    block: TagConsumer<HTMLElement>.() -> Unit\n) =\n    injectRoot { property?.set(it.getAllChildren<T>().first()) }\n        .block()\n\ninline fun <reified T : HTMLElement, P> TagConsumer<HTMLElement>.capture2(\n    property: KMutableProperty0<P>?,\n    crossinline mapFunction: (List<T>) -> P,\n    block: TagConsumer<HTMLElement>.() -> Unit\n) =\n    injectRoot { property?.set(mapFunction(it.getAllChildren<T>().toList())) }\n        .block()\n\nfun TagConsumer<HTMLElement>.injectRoot(\n    action: (HTMLElement) -> Unit\n): TagConsumer<HTMLElement> = InjectorConsumerRoot(this, action)\n\nprivate class InjectorConsumerRoot(\n    private val downstream: TagConsumer<HTMLElement>,\n    private val action: (HTMLElement) -> Unit\n) : TagConsumer<HTMLElement> by downstream {\n    override fun finalize(): HTMLElement {\n        val element = downstream.finalize()\n        action(element)\n        return element\n    }\n}\n\nfun TagConsumer<HTMLElement>.assign(\n    action: (HTMLElement) -> Unit\n): TagConsumer<HTMLElement> = AssigningTagConsumer(this, action)\n\nprivate class AssigningTagConsumer(\n    private val downstream: TagConsumer<HTMLElement>,\n    private val action: (HTMLElement) -> Unit,\n) : TagConsumer<HTMLElement> by downstream {\n    override fun finalize(): HTMLElement {\n        val element = downstream.finalize()\n        console.log(\"fina\")\n        action(element)\n\n        return element\n    }\n}\n\n\n\nclass AttributeCapture(\n    private val attributeName: String\n) : CustomCapture {\n    override fun apply(element: HTMLElement): Boolean = element.hasAttribute(attributeName)\n}\n",null,"package org.olafneumann.mahjong.points.ui.js\n\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.events.Event\nimport kotlin.js.Json\nimport kotlin.js.json\n\n@JsName(\"$\")\nexternal fun jQuery(id: String): JQuery\n@JsName(\"$\")\nexternal fun jQuery(element: HTMLElement): JQuery\n\n@Suppress(\"TooManyFunctions\")\nexternal class JQuery {\n    @Suppress(\"UnusedPrivateMember\")\n    fun on(type: String, callback: () -> Unit)\n    fun mousedown(handler: (Event) -> Unit)\n    fun slideDown(): JQuery\n    fun slideUp(): JQuery\n    fun fadeIn(): JQuery\n    fun fadeOut(options: Json = definedExternally): JQuery\n    fun show(): JQuery\n    fun hide(): JQuery\n    fun parent(): JQuery\n    fun parents(selector: String): JQuery\n    fun remove(): JQuery\n\n    @Suppress(\"UnusedPrivateMember\")\n    fun find(selector: String): JQuery\n\n    @Suppress(\"UnusedPrivateMember\")\n    fun attr(name: String, newValue: Any = definedExternally): Any?\n    @Suppress(\"UnusedPrivateMember\")\n    fun css(css: Any)\n    fun height(): Int\n    @Suppress(\"UnusedPrivateMember\")\n    fun each(function: ((Int, HTMLElement) -> Unit))\n\n    @Suppress(\"UnusedPrivateMember\")\n    fun animate(properties: Json, duration: Int = definedExternally, easing: String = definedExternally)\n    fun stop()\n    @Suppress(\"FunctionNaming\")\n    fun `is`(s: String): Boolean\n\n    fun popover(options: Json)\n    fun popover(command: String)\n\n    val length: Int\n}\n\nfun HTMLElement.asJQuery(): JQuery = jQuery(this)\nfun JQuery.animate(vararg properties: Pair<String, Any?>) = this.animate(json(*properties))\n","package org.olafneumann.mahjong.points.ui.js\n\nimport kotlinx.browser.document\nimport kotlinx.html.ButtonType\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.button\nimport kotlinx.html.dom.create\nimport kotlinx.html.js.div\nimport kotlinx.html.js.onClickFunction\nimport kotlinx.html.title\nimport org.olafneumann.mahjong.points.lang.not\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.events.Event\nimport org.w3c.dom.events.EventTarget\nimport kotlin.js.json\n\n@Suppress(\"LongParameterList\")\nclass Popover(\n    element: HTMLElement,\n    private val container: String = \"body\",\n    private val placement: Placement = Placement.Right,\n    private val title: String? = null,\n    private val trigger: Trigger = Trigger.Click,\n    hideOnOutsideClick: Boolean = false,\n    onShown: () -> Unit = {},\n    private val onCloseButtonClick: Popover.() -> Unit = { hide() },\n    private val content: TagConsumer<HTMLElement>.() -> HTMLElement,\n) {\n    private var jquery: JQuery\n\n    init {\n        jquery = element.asJQuery()\n        jquery.popover(createOptionsJson())\n        jquery.on(\"shown.bs.popover\", onShown)\n\n        if (hideOnOutsideClick) {\n            document.addEventListener(\"click\", {\n                if (isInsidePopover(it.target) /*|| (it.target as HTMLElement).asJQuery() == jquery*/) {\n                    hide()\n                }\n            })\n        }\n    }\n\n    private fun isInsidePopover(eventTarget: EventTarget?) =\n        eventTarget != null\n                && eventTarget is HTMLElement\n                && eventTarget.asJQuery().parents(\".popover.show\").length == 0\n\n    fun show() {\n        jquery.popover(\"show\")\n        jQuery(\".popover\").mousedown {\n            // prevent popover from being disposed when clicking inside\n            it.stopPropagation()\n        }\n    }\n\n    fun hide() = jquery.popover(\"hide\")\n    fun dispose() = jquery.popover(\"dispose\")\n    fun toggle() = jquery.popover(\"toggle\")\n\n    fun hideIfClickOutside(event: Event) {\n\n    }\n\n    private fun createOptionsJson() = json(\n        *listOf(\n            \"container\" to container,\n            \"content\" to document.create.content(),\n            \"html\" to true,\n            \"placement\" to placement.value,\n            \"title\" to if (this@Popover.title.isNullOrBlank()) {\n                null\n            } else {\n                document.create.div(classes = \"d-flex justify-content-between align-items-center\") {\n                    +!this@Popover.title\n                    button(classes = \"btn-close\", type = ButtonType.button) {\n                        attributes[\"aria-label\"] = !\"Close\"\n                        title = \"Cancel\"\n                        onClickFunction = { onCloseButtonClick() }\n                    }\n                }\n            },\n            \"trigger\" to trigger.value\n        )\n            .filter { it.second != null }\n            .toTypedArray()\n    )\n\n    enum class Placement(\n        val value: String\n    ) {\n        Top(\"top\"),\n        Bottom(\"bottom\"),\n        Left(\"left\"),\n        Right(\"right\")\n    }\n\n    enum class Trigger(\n        val value: String\n    ) {\n        Manual(\"manual\"),\n        Click(\"click\"),\n        Focus(\"focus\"),\n    }\n}\n","package org.olafneumann.mahjong.points.ui.model\n\nimport org.olafneumann.mahjong.points.game.GameModifiers\nimport org.olafneumann.mahjong.points.game.Hand\nimport org.olafneumann.mahjong.points.game.Tile\nimport org.olafneumann.mahjong.points.game.Wind\nimport org.olafneumann.mahjong.points.model.CalculatorModel\nimport org.olafneumann.mahjong.points.model.Figure\n\nclass UIModel {\n    private val changeListeners = mutableListOf<UIModelChangeListener>()\n    fun registerChangeListener(listener: UIModelChangeListener) = changeListeners.add(listener)\n    private fun fireChange() = changeListeners.forEach {\n        //console.log(\"fire change\", it)\n        it.modelChanged(this)\n    }\n\n    var calculatorModel: CalculatorModel = createInitialCalculatorModel()\n        private set(value) {\n            field = value\n            fireChange()\n        }\n\n    private fun setNewModel(calculatorModel: CalculatorModel) {\n        this.calculatorModel = calculatorModel\n    }\n\n    fun select(tile: Tile) = setNewModel(calculatorModel.select(tile))\n\n    fun select(figure: Figure) = setNewModel(calculatorModel.select(figure))\n\n    fun setOpen(figure: Figure, open: Boolean) = setNewModel(calculatorModel.setOpen(figure, open))\n\n    fun reset(figure: Figure) = setNewModel(calculatorModel.reset(figure))\n\n    fun setGameModifiers(gameModifiers: GameModifiers) = setNewModel(calculatorModel.setGameModifiers(gameModifiers))\n\n    fun setSeatWind(wind: Wind) = setNewModel(calculatorModel.setSeatWind(wind))\n\n\n    fun reset() = setNewModel(calculatorModel.forNextPlayer(moveSeatWind = false))\n\n    fun setNextPlayer() = setNewModel(calculatorModel.forNextPlayer(moveSeatWind = true))\n\n    fun start() = fireChange()\n\n    companion object {\n        private fun createInitialCalculatorModel(): CalculatorModel =\n            CalculatorModel(\n                hand = Hand(),\n                selectedFigure = Figure.Figure1\n            )\n    }\n}\n\n\n","package org.olafneumann.mahjong.points.util\n\nfun <T> Boolean.map(action: () -> T?) =\n    if (this) {\n        action()\n    } else {\n        null\n    }\n\nfun <T> Boolean.to(onTrue: T, onFalse: T) =\n    if (this) {\n        onTrue\n    } else {\n        onFalse\n    }\n\nfun Boolean.toString(onTrue: String, onFalse: String = \"\") = to(onTrue, onFalse)\n","package org.olafneumann.mahjong.points.util\n\nclass IdGenerator(\n    initialValue: Int = 0\n) {\n    var next = initialValue\n        get() { return ++field }\n        private set\n}\n\nprivate val htmlIdGenerator = IdGenerator()\nval nextHtmlId: String get() = \"mr_id_${htmlIdGenerator.next}\"\n",null,null,null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(327);\n"],"names":["root","factory","exports","module","define","amd","this","getElementById","UIModel","TileSelectionComponent","tilesDiv","model","OptionsComponent","optionsDiv","HandComponent","selectedTilesDiv","ResultComponent","resultDiv","window","setTimeout","initMahjongPointCalculatorUnsafe","console","error","alert","message","initMahjongPointCalculator","log","asJQuery","loading","fadeOut","json","remove","emptySet","color","number","toString","setOf","allOfColor","lazy","languageKey","Language","mapOf","it","get","string","Regex","asSequence","navigator","languages","mapNotNull","map","firstOrNull","translate","emptyList","hand","gameModifiers","seatWind","selectedFigure","asList","errorMessage","toMutableList","remaining","allTilesInGame","toList","ClassicRulesResultComputer","figure","combination","getCombination","size","filter","checkMahjongPoints","checkMahjongDoublings","i","a","setAttributeString","newValue","stopPropagation","hideAllPopovers","handleFigureClick","checked","labelText","verticalSwitch","element","index","input","parent","document","addEventListener","Button","hide","tooltip","onClickFunction","modal2","resultPart","result","pointSumRow","resultTable","createOptionsJson","bootstrap","Modal","options","show","createOnClickListener","description","doublings","times","points","line","heading","pointRow","sum","classList","toggle","enabled","name","value","setAttribute","tile","colorClass","label","id","injectRoot","RadioGroup","target","type","items","selectRecursive","children","hasAttribute","flatMap","sequence","childNodes","InjectorConsumerRoot","action","eventTarget","parents","length","popover","on","onShown","hideOnOutsideClick","fireChange","calculatorModel","onTrue","onFalse","initialValue","open","listOf","visibility","oldCombination","newCombination","getTranslationFor","warn","canConsume","withError","Combination","setCombination","wind","moveSeatWind","prevailingWind","flatten","PlayerResult","lines","clear","append","valueOf","toMap","mapIndexed","createPopover","divForFigure","getTiles","imageTiles","getOrNull","tiles","isConcealed","disabled","dispatchEvent","Event","isMahjong","parentElement","outer","inner","ErrorOverlay","messages","fadeIn","delay","nodeValue","getAttribute","TileImage","setTileName","showTile","toggleAlert","item","mousedown","listener","setNewModel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}